@using Syncfusion.EJ2.Inputs

<div id='speechtotext-container'>
    @Html.EJS().SpeechToText("speech-to-text").TranscriptChanged("onTranscriptChanged").Locale("de").Render()
    @Html.EJS().TextArea("output-textarea").Rows(5).Cols(50).Value("").ResizeMode(Resize.None).Placeholder("Transcribed text will be shown here...").Render()
</div>

<script>
    ej.base.L10n.load({
        'de': {
            "speech-to-text": {
                "abortedError": "Die Spracherkennung wurde abgebrochen.",
                "audioCaptureError": "Kein Mikrofon erkannt. Stellen Sie sicher, dass Ihr Mikrofon angeschlossen ist.",
                "defaultError": "Ein unbekannter Fehler ist aufgetreten.",
                "networkError": "Netzwerkfehler aufgetreten. Überprüfen Sie Ihre Internetverbindung.",
                "noSpeechError": "Keine Sprache erkannt. Bitte sprechen Sie in das Mikrofon.",
                "notAllowedError": "Mikrofonzugriff verweigert. Erlauben Sie Mikrofonberechtigungen.",
                "serviceNotAllowedError": "Der Spracherkennungsdienst ist in diesem Kontext nicht erlaubt.",
                "unsupportedBrowserError": "Der Browser unterstützt die SpeechRecognition API nicht.",
                "startAriaLabel": "Drücken Sie, um zu sprechen und Ihre Worte zu transkribieren",
                "stopAriaLabel": "Drücken Sie, um das Sprechen zu beenden und die Transkription zu stoppen",
                "startTooltipText": "Zuhören starten",
                "stopTooltipText": "Zuhören beenden"
            }
        }
    });
    function onTranscriptChanged(args) {
        var textareaObj = ej.base.getComponent(document.getElementById("output-textarea"), "textarea");
        textareaObj.value = args.transcript;
    }
</script>

<style>
    #speechtotext-container {
        gap: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
</style>