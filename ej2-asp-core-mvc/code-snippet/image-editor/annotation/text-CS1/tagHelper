@{
    var imageTool = new string[] { };
}

<div class="col-lg-12 control-section e-img-editor-sample">
    <ejs-imageeditor id="image-editor" created="created" toolbar="@imageTool"></ejs-imageeditor>
</div>
<ejs-button id="addText" onclick="addTextHandler()" cssClass="e-primary" content="Draw Text"></ejs-button>
<ejs-button id="bold" onclick="boldHandler()" cssClass="e-primary" content="Bold"></ejs-button>
<ejs-button id="italic" onclick="italicHandler()" cssClass="e-primary" content="Italic"></ejs-button>
<ejs-button id="underline" onclick="underlineHandler()" cssClass="e-primary" content="Underline"></ejs-button>
<ejs-button id="strikethrough" onclick="strikethroughHandler()" cssClass="e-primary" content="Strikethrough"></ejs-button>

<script>
    function created() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        if (ej.base.Browser.isDevice) {
            imageEditorObj.open('https://ej2.syncfusion.com/react/demos/src/image-editor/images/bridge.png');
        } else {
            imageEditorObj.open('https://ej2.syncfusion.com/react/demos/src/image-editor/images/bridge.png');
        }
    }

    function addTextHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        var dimension = imageEditorObj.getImageDimension();
        imageEditorObj.drawText(dimension.x, dimension.y, 'Syncfusion');
    }
    function boldHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        let shapes = imageEditorObj.getShapeSettings();
        if (shapes[0]) {
            if (shapes[0].fontStyle.includes('bold')) {
                shapes[0].fontStyle = shapes[0].fontStyle.filter((item) => item !== 'bold')
            } else {
                shapes[0].fontStyle.push('bold');
            }
            imageEditorObj.updateShape(shapes[0]);
        }
    }
    function italicHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        let shapes = imageEditorObj.getShapeSettings();
        if (shapes[0]) {
            if (shapes[0].fontStyle.includes('italic')) {
                shapes[0].fontStyle = shapes[0].fontStyle.filter((item) => item !== 'italic')
            } else {
                shapes[0].fontStyle.push('italic');
            }
            imageEditorObj.updateShape(shapes[0]);
        }
    }
    function underlineHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        let shapes = imageEditorObj.getShapeSettings();
        if (shapes[0]) {
            if (shapes[0].fontStyle.includes('underline')) {
                shapes[0].fontStyle = shapes[0].fontStyle.filter((item) => item !== 'underline')
            } else {
                shapes[0].fontStyle.push('underline');
            }
            imageEditorObj.updateShape(shapes[0]);
        }
    }
    function strikethroughHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        let shapes = imageEditorObj.getShapeSettings();
        if (shapes[0]) {
            if (shapes[0].fontStyle.includes('strikethrough')) {
                shapes[0].fontStyle = shapes[0].fontStyle.filter((item) => item !== 'strikethrough')
            } else {
                shapes[0].fontStyle.push('strikethrough');
            }
            imageEditorObj.updateShape(shapes[0]);
        }
    }
</script>

<style>
    .image-editor {
        margin: 0 auto;
    }

    .e-img-editor-sample {
        height: 80vh;
        width: 100%;
    }

    @@media only screen and (max-width: 700px) {
        .e-img-editor-sample {
            height: 75vh;
            width: 100%;
        }
    }

    .control-wrapper {
        height: 100%;
    }
</style>