<div class="col-lg-12 control-section e-img-editor-sample">
    @Html.EJS().ImageEditor("image-editor").Created("created").Toolbar(new string[] { }).Width("550px").Height("350px").ShowQuickAccessToolbar(false).Render()
    <div class="button-group" style="margin-top: 10px;">
        @Html.EJS().Button("addText").CssClass("e-primary").Content("Add Text").Click("addTextHandler").Render()
        <div class="e-btn-group">
            <input type="checkbox" id="checkbold" onchange="toggleFontStyle('bold', this.checked)" />
            <label class="e-btn" for="checkbold"><span class="e-icons e-bold"></span>Bold</label>
            <input type="checkbox" id="checkitalic" onchange="toggleFontStyle('italic', this.checked)" />
            <label class="e-btn" for="checkitalic"><span class="e-icons e-italic"></span>Italic</label>
            <input type="checkbox" id="checkline" onchange="toggleFontStyle('underline', this.checked)" />
            <label class="e-btn" for="checkline"><span class="e-icons e-underline"></span>Underline</label>
            <input type="checkbox" id="checkstrikethrough" onchange="toggleFontStyle('strikethrough', this.checked)" />
            <label class="e-btn" for="checkstrikethrough"><span class="e-icons e-strikethrough"></span>Strikethrough</label>
        </div>
    </div>
</div>

<script>
    function created() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        imageEditorObj.open('https://ej2.syncfusion.com/react/demos/src/image-editor/images/bridge.png');
    }

    function addTextHandler() {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        var dimension = imageEditorObj.getImageDimension();
        imageEditorObj.drawText(dimension.x, dimension.y, 'Syncfusion');
        var addButton = document.getElementById('addText');
        addButton.ej2_instances[0].disabled = true;
    }

    function toggleFontStyle(style, isChecked) {
        var imageEditorObj = ej.base.getComponent(document.getElementById('image-editor'), 'image-editor');
        let shapes = imageEditorObj.getShapeSettings();
        if (shapes && shapes[0]) {
            if (isChecked) {
                if (!shapes[0].fontStyle.includes(style)) {
                    shapes[0].fontStyle.push(style);
                }
            } else {
                shapes[0].fontStyle = shapes[0].fontStyle.filter(item => item !== style);
            }
            imageEditorObj.updateShape(shapes[0]);
        }
    }
</script>

<style>
    .image-editor {
        margin: 0 auto;
    }

    .e-img-editor-sample {
        height: 80vh;
        width: 100%;
    }

    @@media only screen and (max-width: 700px) {
        .e-img-editor-sample {
            height: 75vh;
            width: 100%;
        }
    }

    .control-wrapper {
        height: 100%;
    }

    .button-group {
        display: flex;
        align-items: center;
    }

    #addText {
        margin-right: 10px;
    }

    .button-group .e-btn .e-icons {
        margin-right: 5px;
    }
</style>