@{
    var data = new []
     {
    new { latitude= 22.572646, longitude= 88.363895 },
        new { latitude= 25.0700428, longitude= 67.2847875 }
};
}


< button id = "button" > GetMinMaxLatitudeLongitude</button >
<p id="coordinatesDisplay"></p>

@(Html.EJS().Maps("maps").Width("450px").ZoomSettings(zoom => zoom.ZoomFactor(7).Enable(true)).CenterPosition(center => center.Latitude(21.815447).Longitude(80.1932)).Layers(layers => {
    layers.MarkerSettings(marker => {
        marker.Visible(true).AnimationDuration(1500).Shape(MarkerType.Circle).DataSource(data).Height(25).Width(25).Add();
    }).ShapeData(ViewBag.worldMap).Add();
}).Render())

<script>
    function formatKey(key) {
  if (key === 'minLatitude') {
    return 'Minimum Latitude';
  } else if (key === 'maxLatitude') {
    return 'Maximum Latitude';
  } else if (key === 'minLongitude') {
    return 'Minimum Longitude';
  } else if (key === 'maxLongitude') {
    return 'Maximum Longitude';
  }
}

document.getElementById('button').onclick = () => {
  var maps = document.getElementById('maps').ej2_instances[0];
    mapBoundCoordinates = maps.getMinMaxLatitudeLongitude();
    const displayDiv = document.getElementById('coordinatesDisplay');
    displayDiv.innerHTML = '';
    if (mapBoundCoordinates) {
    for (const key in mapBoundCoordinates) {
      if (Object.hasOwnProperty.call(mapBoundCoordinates, key)) {
        const p = document.createElement('p');
    const formattedKey = formatKey(key);
    p.textContent = `${formattedKey}: ${mapBoundCoordinates[key]}`;
    displayDiv.appendChild(p);
      }
    }
  } else {
        displayDiv.textContent = 'No coordinates available';
  }
};
</script>
