<ejs-pivotview id="PivotView" width="100%" height="300">
    <e-datasourcesettings dataSource="@ViewBag.DataSource" enableSorting="true">
        <e-formatsettings>
            <e-field name="Amount" format="C0" maximumSignificantDigits="10" minimumSignificantDigits="1" useGrouping="true"></e-field>
        </e-formatsettings>
        <e-rows>
            <e-field name="Country"></e-field>
            <e-field name="Products"></e-field>
        </e-rows>
        <e-columns>
            <e-field name="Year"></e-field>
            <e-field name="Order_Source" caption="Order Source"></e-field>
        </e-columns>
        <e-values>
            <e-field name="In_Stock" caption="In Stock"></e-field>
            <e-field name="Sold" caption="Units Sold"></e-field>
            <e-field name="Amount" caption="Sold Amount"></e-field>
        </e-values>
        <e-filters>
            <e-field name="Product_Categories" caption="Product Categories"></e-field>
        </e-filters>
    </e-datasourcesettings>
    <e-gridSettings columnWidth="140"></e-gridSettings>
</ejs-pivotview>
<a id="save" class="btn btn-primary">Save</a><div class="fileUpload btn btn-primary"><span>Load</span><input id="files" type="file" class="upload" /></div>
<style>
    .fileUpload {
        position: relative;
        overflow: hidden;
        margin: 10px;
    }

    .fileUpload input.upload {
        position: absolute;
        top: 0;
        right: 0;
        margin: 0;
        padding: 0;
        font-size: 20px;
        cursor: pointer;
        opacity: 0;
        filter: alpha(opacity=0);
    }
</style>
<script>
    // Step 1: Initiate the file uploader
    var uploadObj = new ej.inputs.Uploader({});
    uploadObj.appendTo('#fileupload');
    var input = document.querySelector('input[type="file"]');
    // Step 2: Add the event listener which fires when the *.CSV file is uploaded.
    input.addEventListener('change', function (e) {
        // Step 3: Initiate the file reader
        var reader = new FileReader();
        reader.onload = function () {
            var lines = [];
            var jsonObject = reader.result.split(/\r?\n|\r/);
            lines.push(jsonObject[0].split(',').map(function (e) { return e.replace(/ /g, '').replace(/^\"(.+)\"$/, "$1"); }));
            for (var i = 1; i < jsonObject.length; i++) {
                if (!ej.base.isNullOrUndefined(jsonObject[i]) && jsonObject[i] !== '') {
                    lines.push(jsonObject[i].split(','));
                }
            }
            var pivotObj = document.getElementById('PivotView').ej2_instances[0];
            pivotObj.dataSourceSettings.dataSource = lines;
        };
        reader.readAsText(input.files[0]);
    });

    document.addEventListener("DOMContentLoaded", function () {
                var pivotGridObj = document.getElementById('PivotView').ej2_instances[0];
                document.getElementById("save").addEventListener("click", function () {
                    if (pivotGridObj) {
                        const dataSource = JSON.parse(pivotGridObj.getPersistData()).dataSourceSettings;
                        const a = document.createElement('a');
                        const mime_type = 'application/octet-stream';
                        a.setAttribute('download', 'pivot.JSON');
                        a.href = 'data:' + mime_type + ';base64,' + btoa(JSON.stringify(dataSource) || '');
                        document.body.appendChild(a);
                        a.click();
                        document.body.removeChild(a);
                    }
                });

                document.getElementById("files").addEventListener("change", function (event) {
                    const input = event.target;
                    const file = input.files?.[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onloadend = function (evt) {
                            if (evt.target.readyState === FileReader.DONE) {
                                const result = evt.target.result;
                                if (pivotGridObj) {
                                    pivotGridObj.dataSourceSettings = JSON.parse(result);
                                }
                            }
                        };
                        reader.readAsText(file);
                    }
                    input.value = ''; // Clear the input
                });
            });
</script>