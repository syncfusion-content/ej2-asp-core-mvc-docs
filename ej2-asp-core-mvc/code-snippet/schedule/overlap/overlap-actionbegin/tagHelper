@using Syncfusion.EJ2.Schedule

<ejs-schedule id="schedule" height="550" selectedDate="new DateTime(2025, 3, 6)" allowOverlap="false" actionBegin="onActionBegin">
    <e-schedule-views>
        <e-schedule-view option="Day"></e-schedule-view>
        <e-schedule-view option="Week"></e-schedule-view>
        <e-schedule-view option="TimelineWeek"></e-schedule-view>
        <e-schedule-view option="Month"></e-schedule-view>
        <e-schedule-view option="Agenda"></e-schedule-view>
    </e-schedule-views>
    <e-schedule-eventsettings dataSource="@ViewBag.appointments">
        <e-eventsettings-fields id="Id">
            <e-field-subject name="Subject"></e-field-subject>
            <e-field-isallday name="IsAllDay"></e-field-isallday>
            <e-field-starttime name="StartTime"></e-field-starttime>
            <e-field-endtime name="EndTime"></e-field-endtime>
        </e-eventsettings-fields>
    </e-schedule-eventsettings>
</ejs-schedule>

<button id="AddOverlapEvent" class="e-btn">Add OverlapEvent</button>
<button id="AddnonOverlapEvent" class="e-btn">Add Non-OverlapEvent</button>

<script type="text/javascript">

    var eventsData = @Html.Raw(Json.Serialize(ViewBag.appointments));

    function onActionBegin(args) {
        if ((args.requestType === 'eventCreate') || (args.requestType === 'eventChange')) {
            args.promise = checkOverlap(args);
        }
    }

    function checkOverlap(args) {
        return new Promise(function(resolve) {
            var eventsToCheck = Array.isArray(args.data) ? args.data : [args.data];
            var overlappingEvents = [];
            
            overlappingEvents = eventData.filter(function(event) {
                return eventsToCheck.some(function(newEvent) {
                    return new Date(event.StartTime) < newEvent.EndTime &&
                        new Date(event.EndTime) > newEvent.StartTime &&
                        event.Id !== newEvent.Id;
                });
            });
            
            var result = overlappingEvents.length === 0;
            
            if (!result) {
                var popupArgs = {
                    type: 'OverlapAlert',
                    data: eventsToCheck,
                    overlapEvents: overlappingEvents,
                    element: null,
                    cancel: false
                };
                window.scheduleObj.openOverlapAlert(popupArgs);
            }
            
            resolve(result);
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        window.scheduleObj = document.getElementById('schedule').ej2_instances[0];
        
        document.getElementById('AddOverlapEvent').addEventListener('click', function() {
            var overlapEvent = { 
                Id: 8, 
                Subject: 'OverlapEvent', 
                StartTime: new Date(2025, 2, 13, 10, 0), 
                EndTime: new Date(2025, 2, 13, 11, 0),
                IsAllDay: false
            };
            window.scheduleObj.openEditor(overlapEvent, 'Add', true);
        });

        document.getElementById('AddnonOverlapEvent').addEventListener('click', function() {
            var nonOverlapEvent = { 
                Id: 9, 
                Subject: 'Non-OverlapEvent', 
                StartTime: new Date(2025, 2, 12, 10, 0), 
                EndTime: new Date(2025, 2, 12, 11, 0),
                IsAllDay: false 
            };
            window.scheduleObj.openEditor(nonOverlapEvent, 'Add', true);
        });
    });
</script>