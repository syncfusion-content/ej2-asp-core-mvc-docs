@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).AllowPdfExport(true).ToolbarClick("toolbarClick").Height("272px").Columns(col =>
    {
        col.Field("OrderID").HeaderText("Order ID").Width("90").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
        col.Field("CustomerID").HeaderText("Customer Name").Width("100").Add();
        col.Field("ShipCity").HeaderText("Ship City").Width("100").Add();
        col.Field("ShipCountry").HeaderText("ShipCountry").Width("100").Add();
    }).Toolbar(new List<string>() { "PdfExport" }).Aggregates(gridAggregation => { gridAggregation.Columns(new List<Syncfusion.EJ2.Grids.GridAggregateColumn>() { new Syncfusion.EJ2.Grids.GridAggregateColumn() { ColumnName = "ShipCountry", Type = "Custom", FooterTemplate = "Brazil Count: ${Custom}", CustomAggregate = "customAggregateFn" } }).Add(); }).Render()
<script>
    function toolbarClick(args) {
        let grid = document.getElementById("Grid").ej2_instances[0];
        if (args.item.id === 'Grid_pdfexport') {
            grid.pdfExport();
        }
    }
    function customAggregateFn(data) {
        let brazilCount = data.result ? data.result.filter(item => item['ShipCountry'] === 'Brazil').length : data.filter(item => item['ShipCountry'] === 'Brazil').length;
        return brazilCount;
    }
</script>