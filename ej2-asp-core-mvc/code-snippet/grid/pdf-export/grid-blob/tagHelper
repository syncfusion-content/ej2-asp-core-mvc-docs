<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" allowPdfExport="true" height="230px" toolbar="@(new string[] { "PdfExport" })" toolbarClick="toolbarClick" pdfExportComplete="pdfExportComplete">
        <e-grid-columns>
            <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="90"></e-grid-column>
            <e-grid-column field="CustomerID" headerText="Customer ID" width="100"></e-grid-column>
            <e-grid-column field="Freight" headerText="Freight" width="80"></e-grid-column>
            <e-grid-column field="ShipName" headerText="Ship Name" width="120"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>

<script>
function toolbarClick(args) {
    let grid = document.getElementById("Grid").ej2_instances[0];
    if (args.item.id === 'Grid_pdfexport') {
        // pass fourth parameter as true to get the blob data of exported grid
        grid.pdfExport(undefined, undefined, undefined, true);
    }
}

function pdfExportComplete(args) {
    // execute the promise to get the blob data
    if (args && args.promise) {
        // Execute the promise to get the blob data
        args.promise.then(function (e) {
            exportBlob(e.blobData);
        });
    }
};

function exportBlob(blob) {
    let a = document.createElement('a');
    document.body.appendChild(a);
    a.style.display = 'none';
    let url = window.URL.createObjectURL(blob); // Fix typo here
    a.href = url;
    a.download = 'Export';
    a.click();
    window.URL.revokeObjectURL(url); // Fix typo here
    document.body.removeChild(a);
}
</script>