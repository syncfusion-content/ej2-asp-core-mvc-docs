@Html.EJS().Grid("grid").DataSource((IEnumerable<object>)ViewBag.DataSource).AllowPdfExport(true).ToolbarClick("toolbarClick").DataBound("onDataBound").PdfQueryCellInfo("pdfQueryCellInfo").PdfExportComplete("pdfExportComplete").Height("272").Columns(col =>
    {
       col.Field("OrderID").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("CustomerID").HeaderText("Customer Name").Width("150").Add();
       col.Field("City").HeaderText("City").Width("150").Add();
    }).Toolbar(new List<string>() { "PdfExport" }).Render()
<script>
        let currentCell;
        let currentOrderID=null;
        let cellIndexCount=1;
        function onDataBound() {
            let previousData= null;
            let startRowIndex = null;
            let endRowIndex= null;
            let grid = document.getElementById("grid").ej2_instances[0];
            let rows =  grid.getRows();
            let data =  grid.getCurrentViewRecords();
            for (let i = 0, len = rows.length; i < len; i++) {
                if (!previousData) {
                    previousData = data[i]['OrderID'];
                    startRowIndex = parseInt(rows[i].getAttribute("aria-rowindex"));
                }
                else if (previousData === data[i]['OrderID']) {
                    rows[i].children[0].classList.add('e-hide');
                }
                else if (previousData && previousData !== data[i]['OrderID']) {
                    if (grid.getRows().length > 0 && grid.getRows().length > startRowIndex) {
                        endRowIndex = parseInt(rows[i].getAttribute("aria-rowindex"), 10);
                        let targetRow =  grid.getRows()[startRowIndex];
                        let currentRowChild = rows[i] && rows[i].children[0];
                        if (targetRow && currentRowChild) {
                            let targetCell = [].slice.call(targetRow.querySelectorAll('.e-rowcell')).filter((cell) =>
                                parseInt(cell.getAttribute('aria-colindex'), 10) === parseInt(currentRowChild.getAttribute('aria-colindex'))
                            );
                            if (targetCell[0]) {
                                targetCell[0].setAttribute("rowSpan", endRowIndex - startRowIndex);
                            }
                        }
                        previousData = data[i]['OrderID'];
                        startRowIndex = parseInt(rows[i].getAttribute("aria-rowindex"), 10);
                    }
                }
                if (rows[i].children[0].classList.contains("e-hide") || i < len) {
                    endRowIndex = parseInt(rows[i].getAttribute("aria-rowindex"), 10);
                    if (endRowIndex > 0) {
                    let targetRow = grid.getRows()[startRowIndex];  
                    let currentRowChild = rows[i] && rows[i].children[0];
                    if (targetRow && currentRowChild) {
                        let targetCell = [].slice.call(targetRow.querySelectorAll('.e-rowcell')).filter((cell) =>
                            parseInt(cell.getAttribute('aria-colindex'), 10) === parseInt(currentRowChild.getAttribute('aria-colindex'))
                        );
                        if (targetCell.length > 0) {
                            targetCell[0].setAttribute("rowSpan", endRowIndex - startRowIndex + 1);
                        }
                    }
                    }
                }
            }
        }
        function pdfQueryCellInfo(args) {
    
        if (!currentOrderID && args.column.field == "OrderID") {
            currentOrderID = args.data["OrderID"];
            currentCell = args.cell;
        }
        else if (currentOrderID && args.column.field == "OrderID" && currentOrderID == args.data["OrderID"]) {
            cellIndexCount++;
        } else if (currentOrderID !== args.data["OrderID"] && args.column.field == "OrderID") {
            currentCell.rowSpan = cellIndexCount;
            currentOrderID = args.data["OrderID"];
            currentCell = args.cell;
            cellIndexCount = 1;
        }
        }
        function pdfExportComplete(args) {
            currentOrderID = null;
            currentCell = null;
            cellIndexCount=1;
          }
        function toolbarClick(args) {
            let grid = document.getElementById("grid").ej2_instances[0];
            if (args.item.id === 'grid_pdfexport') {
                grid.pdfExport();
            }
        }
    </script>