<div style="margin-left:180px">
    <p style="color:red;" id="message"></p>
</div>
@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).AllowPaging(true).Toolbar(new List<string> { "PdfExport" }).AllowPdfExport(true).Columns(col =>{
  col.Field("OrderID").HeaderText("Order ID").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width(120).Add();
  col.Field("CustomerID").HeaderText("Customer ID").Visible(false).Width("150").Add();
  col.Field("ShipCity").HeaderText("Ship City").Width(150).Add();
  col.Field("ShipCountry").HeaderText("Ship Country").Width(150).Add();
}).ToolbarClick("toolbarClick").PdfExportComplete("pdfExportComplete").Render();
<script>
    var queryClone;
    var grid;
    document.addEventListener('DOMContentLoaded', function () {
        grid = document.getElementById('Grid').ej2_instances[0];
    });
    function toolbarClick(args) {
        if (args.item.id === 'Grid_pdfexport') {
            queryClone = grid.query;
            grid.query = new ej.data.Query().addParams('recordcount', '15');
            document.getElementById('message').innerText =
                'Key: ' + grid.query.params[0].key +
                ' and Value: ' + grid.query.params[0].value + ' on ' + args.item.text;
            grid.pdfExport();
        }
    }

    function pdfExportComplete() {
    grid.query = queryClone;
    }
</script>