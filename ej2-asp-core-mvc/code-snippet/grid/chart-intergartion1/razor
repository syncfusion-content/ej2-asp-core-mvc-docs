@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.dataSource).Height(418).Columns(col =>
{
	col.Type("checkbox").Width("50").Add();
    col.Field("Product").HeaderText("Products").Width(200).Add();
	col.Field("Month").HeaderText("Month").Width(150).Add();
    col.Field("Online").HeaderText("Online").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width(160).Add();
    col.Field("Retail").HeaderText("Retail").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width(160).Add();
    col.Field("Total").HeaderText("Total").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width(160).Add();
}).AllowSelection(true).SelectionSettings(select => select.Type(Syncfusion.EJ2.Grids.SelectionType.Multiple))ContextMenuItems(new List<object>() { "Bar", "StackingBar", "StackingBar100", "Pie", "Column", "StackingColumn", "StackingColumn100", "Line", "StackingLine", "StackingLine100", "Area", "StackingArea", "StackingArea100", "Scatter" }).ContextMenuClick("contextMenuClick").Created("created").Render()

<script type="text/javascript">
    let gridChart;

    function created() {
        var grid = document.getElementById("Grid").ej2_instances[0];
        gridChart = new ej.gridchart.GridChart({
        enablePropertyPanel: true,
        enableRtl: grid.enableRtl,
        allowExport: true,
        locale: grid.locale,
        updateChartSettings: updateChartSettings
        });
    }

    function contextMenuClick(args) {
        if (args.chartType) {
        const chartArgs = {
            gridInstance: (args.gridInstance),
            chartType: args.chartType,
            records: (args.records),
        };
        const chartModel = {
            primaryXAxis: {
            valueType: 'Category',
            labelRotation: 315,
            },
            margin: {
            top: 20,
            bottom: 20,
            right: 20,
            left: 20
            },
            tooltip: {
            enable: true,
            textStyle: {
                size: '16px',
                fontFamily: 'Arial, Helvetica, sans-serif'
            }
            },
            title: 'Sales Data',
            titleStyle: {
            size: '24px',
            fontFamily: 'Arial, Helvetica, sans-serif',
            fontWeight: 'Bold'
            },

            subTitle: 'Sales data for various products over the months',
            load: (args) => {
            if (args.chart.titleStyle) {
                args.chart.titleStyle.color = '#1976d2';
            }
            }
        };
        const accumulationChartModel= {
            title :'Sales Distribution'
        };
        const model = {
            chart: chartModel,
            accumulationChart: accumulationChartModel
        };
        const categorySeries = {
            category: ['Product', 'Month'],
            series: ['Online', 'Retail']
        };
        gridChart.render(chartArgs, model, categorySeries);
        }
    }

    function updateChartSettings(args) {
      const chart = args.changes?.chart;
      if (!chart) return;

      // Restrict margin values to minimum 20.
      const margin = chart.margin;
      if (margin) {
        if (margin.top < 20) margin.top = 20;
        if (margin.bottom < 20) margin.bottom = 20;
        if (margin.left < 20) margin.left = 20;
        if (margin.right < 20) margin.right = 20;
      }
    }
</script>
