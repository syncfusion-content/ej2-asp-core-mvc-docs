@{
    var columnMenuItems = new List<object>
        {
            "SortAscending",
            "SortDescending",
            "Group",
            "Ungroup",
            "Filter",
            new
            {
                text = "Sub Menu",
                items = new List<object>
                {
                    new { text = "Option 1", id = "option1" },
                    new { text = "Option 2", id = "option2" },
                    new { text = "Option 3", id = "option3" },
                    new
                    {
                        text = "Nested Sub Menu",
                        items = new List<object>
                        {
                            new { text = "Nested Option 1", id = "nestedoption1" },
                            new { text = "Nested Option 2", id = "nestedoption2" }
                        }
                    }
                }
            }
        };
}

@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).ShowColumnMenu(true).AllowSorting().AllowFiltering(true).AllowGrouping().Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("CustomerID").HeaderText("Customer ID").Width("120").Add();
    col.Field("Freight").HeaderText("Freight").Width("130").Format("C").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("ShipCity").HeaderText("Ship City").Width("130").Add();
    col.Field("ShipCountry").HeaderText("Ship Country").Width("130").Add();
}).ColumnMenuItems(columnMenuItems).ColumnMenuClick("columnMenuClick").FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.CheckBox); }).GroupSettings(group => { group.ShowGroupedColumn(true); }).AllowPaging().Render()

<script>
   function columnMenuClick(args) {
        if (args.item.id === 'option1') {
            // custom function
        }
    }
</script>