<div style="display: flex">
  <label style="padding: 10px 10px 26px 0"> Change the frozen column: </label>
  <span style="height:fit-content">
   @Html.EJS().DropDownList("dropdown").Index(1).Width("180px").DataSource(@ViewBag.dropdownData).Change("columnChange").Render()
  </span>
</div>
@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.dataSource).Columns(col =>
{
col.Field("OrderID").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
col.Field("CustomerID").HeaderText("Customer ID").IsFrozen(true).Width("130").Add();
col.Field("EmployeeID").HeaderText("Employee ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
col.Field("Freight").HeaderText("Freight").Width("120").Format("C").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
col.Field("OrderDate").HeaderText("Order Date").Width("130").Format("yMd").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
col.Field("ShipCountry").HeaderText("Ship Country").Width("120").Add();
col.Field("ShipCity").HeaderText("Ship City").Width("120").Add();
col.Field("ShipAddress").HeaderText("Ship Address").Width("120").Add();
col.Field("ShipName").HeaderText("Ship Name").Width("120").Add();
}).Render()

<script type="text/javascript">
    function columnChange(args) {
        var grid = document.getElementById("Grid").ej2_instances[0];
        const selectedColumn = grid.getColumnByField(args.value);
        // Iterate through all columns and unfreeze any previously frozen columns
        grid.columns.forEach((column) => {
            if (column.isFrozen) {
                column.isFrozen = false;
            }
        });
        // Freeze the newly selected column, if it exists
        if (selectedColumn) {
            selectedColumn.isFrozen = true;
        }
        // Refresh the columns
        grid.refreshColumns();
    }
</script>