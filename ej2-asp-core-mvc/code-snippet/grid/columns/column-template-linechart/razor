@Html.EJS().Grid("FlatGrid").DataSource((IEnumerable<object>)ViewBag.dataSource).QueryCellInfo("queryCellInfo").Columns(col =>
{
    col.Field("EmployeeID").HeaderText("Employee ID").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width(90).Add();
    col.Field("FirstName").HeaderText("First Name").Width(150).Add();
    col.HeaderText("Employee Performance Rating").Template("#columnTemplate").Width(280).Add();
}).Render()
<script id="columnTemplate" type="text/x-template">
    <div id="spkline${EmployeeID}" style="height: 50px; width: 90%;"></div>
</script>
<script>
    let lineData = [
        [0, 6, -4, 1, -3, 2, 5],
        [5, -4, 6, 3, -1, 2, 0],
        [6, 4, 0, 3, -2, 5, 1],
        [4, -6, 3, 0, 1, -2, 5],
        [3, 5, -6, -4, 0, 1, 2],
        [1, -3, 4, -2, 5, 0, 6],
        [2, 4, 0, -3, 5, -6, 1],
        [5, 4, -6, 3, 1, -2, 0],
        [0, -6, 4, 1, -3, 2, 5],
        [6, 4, 0, -3, 2, -5, 1],
    ];
        function queryCellInfo(args) {
            if (args.column.headerText === 'Employee Performance Rating') {
                let sparklineContainer = args.cell.querySelector('#spkline' + args.data.EmployeeID);
                let sparkline = new ej.charts.Sparkline({
                    height: '50px',
                    width: '90%',
                    lineWidth: 2,
                    valueType: 'Numeric',
                    fill: '#3C78EF',
                    dataSource:  getSparkData('line', args.data.EmployeeID),
            });
            sparkline.appendTo(sparklineContainer);
        }
    }
    function getSparkData(type, count) {
        return lineData[count];
    }
</script>