@Html.EJS().Grid("FrozenGrid").DataSource((IEnumerable<object>)ViewBag.datasource).ActionComplete("actionComplete").AllowSelection(false).EnableHover(false).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true); }).Height("315").Columns(col =>
{
   col.Field("OrderID").HeaderText("Order ID").Width("120").IsFrozen(true).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
   col.Field("EmployeeID").HeaderText("Employee ID").Width("200").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
   col.Field("ShipName").HeaderText("Ship Name").Width("150").Add();
   col.Field("ShipAddress").HeaderText("Ship Address").Width("150").Add();
   col.Field("ShipCity").HeaderText("Ship City").Width("200").IsFrozen(true).Add();
   col.Field("ShipCountry").HeaderText("Ship Country").Width("150").Add();
   col.Field("Freight").HeaderText("Freight").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
}).Render()

<script>
    function actionComplete(args) {
        if (args.requestType === 'beginEdit' || args.requestType === 'add') {
            // Add Validation Rules
            args.movableForm.ej2_instances[0].addRules('Freight', { max: 200 });
            args.movableForm.ej2_instances[0].addRules('EmployeeID', { max: 20 });
        }
    }
</script>
