
    @Html.EJS().Grid("InfiniteGrid").DataBound("hide").EnableInfiniteScrolling().InfiniteScrollSettings(settings => { settings.InitialBlocks(5);  }).Height("500").Columns(col =>
   {

       col.Field("Field1").HeaderText("PlayerName").Width("140").Add();
       col.Field("Field2").HeaderText("Year").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field3").HeaderText("Stint").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field4").HeaderText("TMID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
       col.Field("Field5").HeaderText("LGID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
   }).Render()

    <script>
        var infiniteData = [], date1=null, date2=null, flag= true;
        var names = ['hardire', 'abramjo01', 'aubucch01', 'Hook', 'Rumpelstiltskin', 'Belle', 'Emma', 'Regina', 'Aurora', 'Elsa',
            'Anna', 'Snow White', 'Prince Charming', 'Cora', 'Zelena', 'August', 'Mulan', 'Graham', 'Discord', 'Will', 'Robin Hood',
            'Jiminy Cricket', 'Henry', 'Neal', 'Red', 'Aaran', 'Aaren', 'Aarez', 'Aarman', 'Aaron', 'Aaron-James', 'Aarron', 'Aaryan', 'Aaryn',
            'Aayan', 'Aazaan', 'Abaan', 'Abbas', 'Abdallah', 'Abdalroof', 'Abdihakim', 'Abdirahman', 'Abdisalam', 'Abdul', 'Abdul-Aziz',
            'Abdulbasir', 'Abdulkadir', 'Abdulkarem', 'Abdulkhader', 'Abdullah', 'Abdul-Majeed', 'Abdulmalik', 'Abdul-Rehman', 'Abdur',
            'Abdurraheem', 'Abdur-Rahman', 'Abdur-Rehmaan', 'Abel', 'Abhinav', 'Abhisumant', 'Abid', 'Abir', 'Abraham', 'Abu', 'Abubakar',
            'Ace', 'Adain', 'Adam', 'Adam-James', 'Addison', 'Addisson', 'Adegbola', 'Adegbolahan', 'Aden', 'Adenn', 'Adie', 'Adil', 'Aditya',
            'Adnan', 'Adrian', 'Adrien', 'Aedan', 'Aedin', 'Aedyn', 'Aeron', 'Afonso', 'Ahmad', 'Ahmed', 'Ahmed-Aziz', 'Ahoua', 'Ahtasham',
            'Aiadan', 'Aidan', 'Aiden', 'Aiden-Jack', 'Aiden-Vee'];


        document.getElementById("generate").addEventListener('click', () => {

            var grid = document.getElementById("InfiniteGrid").ej2_instances[0]
            if (!infiniteData.length) {
                show();
                dataSource();
                date1 = new Date().getTime();
                grid.dataSource = infiniteData;
            } else {
                flag = true;
                show();
                date1 = new Date().getTime();
                grid.refresh();
            }

        })
        function show() {
            document.getElementById('popup').style.display = 'inline-block';
        }
        function hide(args) {


            if (flag && date1) {
                var date2 = new Date().getTime();
                document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (date2 - date1) + 'ms';
                flag = false;
            }
            document.getElementById('popup').style.display = 'none';
        }
        function dataSource() {
            for (var i= 0; i < 100000; i++) {
                infiniteData.push({
                    'Field1': names[Math.floor(Math.random() * names.length)],
                    'Field2': 1967 + (i % 10),
                    'Field3': Math.floor(Math.random() * 200),
                    'Field4': Math.floor(Math.random() * 100),
                    'Field5': Math.floor(Math.random() * 2000),
                });
            }
        }

    </script>