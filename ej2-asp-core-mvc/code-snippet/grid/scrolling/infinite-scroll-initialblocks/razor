@{
    ViewBag.dropDownData = new List<object> {
       new { text = "1", value = "1" },
       new { text = "2", value = "2" },
       new { text = "3", value = "3" },
       new { text = "4", value = "4" },
       new { text = "5", value = "5" },
       new { text = "6", value = "6" },
       new { text = "7", value = "7" },
       new { text = "8", value = "8" },
   };

}
<div style="display: flex">
    <label style="padding: 10px 10px 26px 0;font-weight:bold"> Select initialBlocks count:  </label>
    <span style="height:fit-content">
        @Html.EJS().DropDownList("dropDown").DataSource(@ViewBag.dropDownData).Width("120px").Index(2).Change("valueChange").Render()
    </span>
</div>
@Html.EJS().Grid("grid").DataSource((IEnumerable<object>)ViewBag.dataSource).EnableInfiniteScrolling().Height("300").Columns(col =>
{
    col.Field("TaskID").HeaderText("Task ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("Engineer").HeaderText("Engineer").Width("150").Add();
    col.Field("Designation").HeaderText("Designation").Width("120").Format("C2").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("Estimation").HeaderText("Estimation").Width("150").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("Status").HeaderText("Status").Width("170").Add();
}).PageSettings(page => { page.PageSize(50); }).Render();
<script>
    function valueChange(args) {
        var grid = document.getElementById("grid").ej2_instances[0];
        grid.infiniteScrollSettings.initialBlocks = parseInt(args.value, 10);
        grid.refresh();
    }
</script>