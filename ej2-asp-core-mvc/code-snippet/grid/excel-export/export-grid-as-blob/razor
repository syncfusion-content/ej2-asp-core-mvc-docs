@Html.EJS().Grid("grid").DataSource((IEnumerable<object>)ViewBag.dataSource).AllowExcelExport().ToolbarClick("toolbarClick").ExcelExportComplete("excelExportComplete").Height("348px").Columns(col =>
{
   col.Field("OrderID").HeaderText("Order ID").Width("120").Add();
   col.Field("CustomerID").HeaderText("Customer Name").Width("150").Add();
   col.Field("OrderDate").HeaderText("Order Date").Width("130").Format("yMd").Add();
   col.Field("Freight").HeaderText("Freight").Width("120").Format("C2").Add();
   col.Field("ShipCountry").HeaderText("Ship Country").Width("120").Add();
}).Toolbar(new List<string>() { "ExcelExport" ,"CsvExport" }).Render()
<script>
    function toolbarClick(args) {
        var grid = document.getElementById("grid").ej2_instances[0];
        if (args.item.id === 'grid_excelexport') {
            // pass undefined to use default settings
            grid.excelExport(undefined, undefined, undefined, true);
        }
        if (args.item.id === 'grid_csvexport') {
            // pass undefined to use default settings
            grid.csvExport(undefined, undefined, undefined, true);
        }
    }
    function excelExportComplete(args) {
        if (args && args.promise) {
            // execute the promise to get the blob data
            args.promise.then((e) => {
                exportBlob(e.blobData);
            });
        }
    }
    function exportBlob(blob) {
        var a = document.createElement('a');
        document.body.appendChild(a);
        a.style.display = 'none';
        var url = window.URL.createObjectURL(blob); // Fix typo here
        a.href = url;
        a.download = 'Export';
        a.click();
        window.URL.revokeObjectURL(url); // Fix typo here
        document.body.removeChild(a);
    }
</script>