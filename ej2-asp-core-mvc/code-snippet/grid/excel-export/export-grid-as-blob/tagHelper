<ejs-grid id="grid" dataSource="@ViewBag.dataSource" height="348px" allowExcelExport="true" excelExportComplete="excelExportComplete" toolbarClick="toolbarClick" toolbar="@(new List<string>() { "ExcelExport" ,"CsvExport" })">
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer Name" width="150"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Date" format="yMd" textAlign="Right" width="130"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="120"></e-grid-column>
        <e-grid-column field="ShipCountry" visible="false" headerText="Ship Country" width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>
<script>
    function toolbarClick(args) {
        var grid = document.getElementById("grid").ej2_instances[0];
        if (args.item.id === 'grid_excelexport') {
            // pass undefined to use default settings
            grid.excelExport(undefined, undefined, undefined, true);
        }
        if (args.item.id === 'grid_csvexport') {
            // pass undefined to use default settings
            grid.csvExport(undefined, undefined, undefined, true);
        }
    }
    function excelExportComplete(args) {
        if (args && args.promise) {
            // execute the promise to get the blob data
            args.promise.then((e) => {
                exportBlob(e.blobData);
            });
        }
    }
    function exportBlob(blob) {
        var a = document.createElement('a');
        document.body.appendChild(a);
        a.style.display = 'none';
        var url = window.URL.createObjectURL(blob); // Fix typo here
        a.href = url;
        a.download = 'Export';
        a.click();
        window.URL.revokeObjectURL(url); // Fix typo here
        document.body.removeChild(a);
    }
</script>