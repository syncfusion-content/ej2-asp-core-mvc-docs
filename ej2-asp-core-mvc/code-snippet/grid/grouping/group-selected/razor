<div style="display:flex">
   <input type="number" id="rowIndex" placeholder="Enter Grouped Row Index" />
   @Html.EJS().Button("valueButton").CssClass("e-primary").Content("Collapse or Expand Row").Render()
</div>
<div style="padding-top:5px">
    <p style="color:red;" id="message"></p>
</div>
@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)Model).AllowGrouping().Height("330px").Columns(col =>
{
   col.Field("OrderID").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
   col.Field("CustomerID").HeaderText("Customer ID").Width("170").AllowGrouping(false).Add();
   col.Field("ShipCity").HeaderText("Ship City").Width("170").AllowGrouping(false).Add();
   col.Field("ShipName").HeaderText("Ship Name").Width("170").AllowGrouping(false).Add();
}).GroupSettings(group => { group.Columns(new string[] { "CustomerID" }); }).Render()
<script>
    document.getElementById('valueButton').addEventListener('click', function () {
        var grid = document.getElementById("Grid").ej2_instances[0];
        const groupedRows = Array.from(
            grid.getContentTable().querySelectorAll('.e-recordplusexpand, .e-recordpluscollapse')
        );
        let groupedRowIndex = parseInt(document.getElementById('rowIndex').value);
        if (groupedRows.length >= 0 && (groupedRowIndex < groupedRows.length)) {
            document.getElementById('message').innerText = '';
            const groupCaptionElement = groupedRows[groupedRowIndex];
            grid.groupModule.expandCollapseRows(groupCaptionElement);
        } else {
            document.getElementById('message').innerText =
               'The entered index exceeds the total number of grouped rows. Please enter a valid grouped index.';
        }
    });
</script>
<style>
    #rowIndex {
        margin-right: 10px;
    }
</style>