
@{
    var filter = new
    {
        type = "CheckBox",
        itemTemplate = "#filterItemTemplate"
    };
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
@Html.EJS().Grid("excelFilter").DataSource((IEnumerable<object>)ViewBag.dataSource).AllowFiltering().Height("352px").Columns(col =>
{
    col.Field("CategoryName").HeaderText("Category Name").Width("100").Filter(filter).Add();
    col.Field("Delivered").HeaderText("Delivered").DisplayAsCheckBox(true).Width("100").Add();
    col.Field("ProductID").HeaderText("Product ID").Width("100").Add();
}).FilterSettings(Filter => Filter.Type(Syncfusion.EJ2.Grids.FilterType.Excel)).PageSettings(page => { page.PageSize(10); }).AllowPaging().Render()
<script id='filterItemTemplate' type='text/x-template'>
    ${itemTemplate(data)}
</script>
<script>
    const categoryIcons = {
        Beverages: 'fas fa-coffee',
        Condiments: 'fas	fa-leaf',
        Confections: 'fas fa-birthday-cake',
        DairyProducts: 'fas fa-ice-cream',
        Grains: 'fas fa-seedling',
        Meat: 'fas fa-drumstick-bite',
        Produce: 'fas fa-carrot',
        Seafood: 'fas fa-fish',
    };
    function itemTemplate(args) {
       return '<div><span class="' + categoryIcons[args.CategoryName] + '"></span>' + args.CategoryName + '</div>';
    }
</script>