@using Newtonsoft.Json;
@{
    var filteruiTemplate = new
    {
        ui = new
        {
            create = "createCustomFilter",
            write = "writeCustomFilter",
            read = "readCustomFilter"
        }
    };
}
<ejs-grid id="Grid" dataSource="@ViewBag.dataSource" allowFiltering="true" height="300px">
    <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="100"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer ID" filter="filteruiTemplate" width="120"></e-grid-column>       
        <e-grid-column field="ShipCity" headerText="Ship City" width="100"></e-grid-column>
        <e-grid-column field="ShipName" headerText="Ship Name" width="100"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    let dropInstance;
    function createCustomFilter(args) {
        var flValInput = new ej.base.createElement('input', { className: 'flm-input' });
        args.target.appendChild(flValInput);
        dropInstance = new ej.dropdowns.DropDownList({
            dataSource: new ej.data.DataManager(@Html.Raw(JsonConvert.SerializeObject(ViewBag.dataSource))),
            fields: { text: 'CustomerID', value: 'CustomerID' },
            placeholder: 'Select a value',
            popupHeight: '200px'
        });
        dropInstance.appendTo(flValInput);
    }
    function writeCustomFilter(args) {
            dropInstance.value = args.filteredValue;
    }
    function readCustomFilter(args) {
        args.fltrObj.filterByColumn(args.column.field, args.operator, dropInstance.value);
    }
</script>