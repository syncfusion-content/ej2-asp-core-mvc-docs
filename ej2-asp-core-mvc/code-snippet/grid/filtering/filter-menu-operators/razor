@{
    var stringOperator = new[] {
        new { value = "startsWith", text = "Starts With" },
        new { value = "endsWith", text = "Ends With" },
        new { value = "contains", text = "Contains" },
        new { value = "equal", text = "Equal" },
        new { value = "notEqual", text = "Not Equal" }
    };
    var numberOperator = new[] {
        new { value = "equal", text = "Equal" },
        new { value = "notEqual", text = "Not Equal" },
        new { value = "greaterThan", text = "Greater Than" },
        new { value = "lessThan", text = "Less Than" }
    };
    var dateOperator = new[] {
        new { value = "equal", text = "Equal" },
        new { value = "notEqual", text = "Not Equal" },
        new { value = "greaterThan", text = "After" },
        new { value = "lessThan", text = "Before" }
    };
    var booleanOperator = new[] {
        new { value = "equal", text = "Equal" },
        new { value = "notEqual", text = "Not Equal" }
    };
}

@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).AllowFiltering().Height("350px").Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("CustomerID").HeaderText("Customer ID").Width("130").Add();
    col.Field("OrderDate").HeaderText("Order Date").Width("140").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Format("yMd").Add();
    col.Field("Verified").HeaderText("Verified").Width("120").DisplayAsCheckBox(true).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center).Add();
    col.Field("ShipName").HeaderText("ShipName").Width("120").Add();
}).FilterSettings(filter => { filter.Type(Syncfusion.EJ2.Grids.FilterType.Menu).Operators(new { stringOperator = stringOperator, numberOperator = numberOperator, dateOperator = dateOperator, booleanOperator = booleanOperator }); }).Render()
