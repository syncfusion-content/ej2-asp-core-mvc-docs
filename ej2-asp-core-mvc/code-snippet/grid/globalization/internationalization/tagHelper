<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" height="315" allowPaging="true" allowGrouping="true">
<e-grid-columns>
            <e-grid-column field="OrderID" headerText="Order ID" textAlign="Right" width="120"></e-grid-column>
            <e-grid-column field="CustomerID" headerText="Customer ID" width="100"></e-grid-column>
            <e-grid-column field="Freight" headerText="Freight" textAlign="Right" width="80" format="C2"></e-grid-column>
            <e-grid-column field="ShipName" headerText="Ship Name" width="150"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>
<script>
    loadLocaleFile();
        function loadLocaleFile() {
        fetch('/cldr-data/locale.json')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to load culture file');
                }
                return response.json();
            })
            .then(deDELocalization => {
                ej.base.L10n.load(deDELocalization);
                applyLocaleToGrid();  // Refresh the grid after localization is loaded
            })
            .catch(error => {
                console.error('Error loading culture file:', error);
            });
    }

    function applyLocaleToGrid() {
        var grid = document.getElementById('Grid').ej2_instances[0];
        if (grid) {
            grid.locale = "de-DE"; 
            grid.refresh();
                loadCultureFiles(); 
        }
    }

    function loadCultureFiles() {
        var files = ['ca-gregorian.json', 'numberingSystems.json', 'currencies.json', 'timeZoneNames.json'];
        var loader = ej.base.loadCldr;
        var loadCulture = function (prop) {
        var fetch = new ej.base.Fetch(location.origin + '/../cldr-data/' + files[prop], 'GET', false);
        fetch.onSuccess = function (response) {
                if (typeof response === 'object') {
                    // If the response is an object, convert it to a JSON string
                    var jsonString = JSON.stringify(response);
                    ej.base.loadCldr(JSON.parse(jsonString));
                } else if (typeof response === 'string') {
                    // If the response is already a JSON string, parse and load it
                    ej.base.loadCldr(JSON.parse(response));

                } else {
                    console.error('Invalid responsetype received:', response);
                }
                ej.base.setCulture('de-DE');
                ej.base.setCurrencyCode('EUR');
            };
            fetch.send();
        };
        for (var prop = 0; prop < files.length; prop++) {
            loadCulture(prop);
        }
    }
</script>