@{
    var jobRole = new List<object>
    {
        new { role = "Team Lead" },
        new { role = "Manager" },
        new { role = "Engineer" },
        new { role = "Sales" },
        new { role = "Support" }
    };
    var salaryDetails = new List<object>
    {
        new { Salary = 6000 },
        new { Salary = 17000 },
        new { Salary = 18000 },
        new { Salary = 26000 },
        new { Salary = 25000 },
        new { Salary = 40000 },
        new { Salary = 35000 },
        new { Salary = 55000 },
        new { Salary = 65000 }
    };
    var roleDropDownList = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = jobRole, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "role", Text = "role" }, AllowFiltering = true,Change="valueChange" };
    var salaryDropDownList = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = salaryDetails, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "Salary", Text = "Salary" }, AllowFiltering = true,Change="customFunction" };
}
@Html.EJS().Grid("grid").DataSource((IEnumerable<object>)ViewBag.DataSource).Height("348px").Columns(col =>
{
   col.Field("EmployeeID").HeaderText("Employee ID").IsPrimaryKey(true).Width("120").ValidationRules(new { required = "true"}).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
   col.Field("Role").HeaderText("Role").EditType("dropdownedit").Width("150").Edit(new { @params = roleDropDownList }).Add();
   col.Field("Salary").HeaderText("Salary").EditType("dropdownedit").Width("150").Edit(new { @params = salaryDropDownList }).Add();
   col.Field("Address").HeaderText("Address").Width("150").ValidationRules(new { required = "true"}).Add();
}).Load("load").ActionBegin("actionBegin").EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()
<script>
    window.role = '';
    function customFunction(args) {
        var grid = document.getElementById("grid").ej2_instances[0];
        var formObject = grid.editModule.formObj.element['ej2_instances'][0];
        let salary = parseInt(args.value)
        switch (window['role']) {
            case 'Sales':
                if ((salary >= 5000) && (salary < 15000))
                    return true;
                else
                    formObject.rules['Salary']['required'][1] = 'Please enter valid Sales Salary >=5000 and< 15000';
                break;
            case 'Support':
                if ((salary >= 15000 && salary < 19000))
                    return true;
                else
                    formObject.rules['Salary']['required'][1] = 'Please enter valid Support Salary >=15000 and < 19000';
                break;
            case 'Engineer':
                if ((salary >= 25000 && salary < 30000))
                    return true;
                else
                    formObject.rules['Salary']['required'][1] = 'Please enter valid Engineer Salary between >=25000 and < 30000';
                break;
            case 'Team Lead':
                if ((salary >= 30000) && (salary < 50000))
                    return true;
                else
                    formObject.rules['Salary']['required'][1] = 'Please enter valid TeamLead Salary >= 30000 and < 50000';
                break;
            case 'Manager':
                if ((salary >= 50000) && (salary < 70000))
                    return true;
                else
                    formObject.rules['Salary']['required'][1] = 'Please enter valid Manager Salary >=50000 and < 70000';
                break;
        }
        return false;
    }
    function valueChange(args) {
      var grid = document.getElementById("grid").ej2_instances[0];
      window.role = args.value.toString();
      var formObject = grid.editModule.formObj.element['ej2_instances'][0];
        switch ( window.role) {
            case 'Sales':
                formObject.rules['Salary']['required'][1] = 'Please enter valid Sales Salary >=5000 and< 15000';
                break;
            case 'Support':
                formObject.rules['Salary']['required'][1] = 'Please enter valid Support Salary >=15000 and < 19000';
                break;
            case 'Engineer':
                formObject.rules['Salary']['required'][1] = 'Please enter valid Engineer Salary between >=25000 and < 30000';
                break;
            case 'Team Lead':
                formObject.rules['Salary']['required'][1] = 'Please enter valid TeamLead Salary >= 30000 and < 50000';
                break;
            case 'Manager':
                formObject.rules['Salary']['required'][1] = 'Please enter valid Manager Salary >=50000 and < 70000';
                break;
        }
    }
   function load() {
        var grid = document.getElementById("grid").ej2_instances[0];
        var column = grid.getColumnByField('Salary');
        column.validationRules = {
            required: [customFunction,'Please enter valid salary'],
        };
    }
   function actionBegin(args){
        window.role = args.rowData.Role;
    }
</script>