<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
    <e-grid-editsettings allowEditing="true" allowAdding="true" allowDeleting="true"></e-grid-editsettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID"  isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="EmployeeID" headerText="Empolyee Name" foreignKeyValue="FirstName" dataSource="@ViewBag.EmployeeDataSource" edit="@(new {create = "create", read = "read", destroy="destroy", write = "write"})" width="150"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Date"  format="yMd" textAlign="Right" editType="datepickeredit" width="130"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" editType="numericedit" width="120"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    var comboBoxData = [
        { FirstName: 'Nancy', EmployeeID: 1 },
        { FirstName: 'Andrew', EmployeeID: 6 },
        { FirstName: 'Janet', EmployeeID: 3 },
        { FirstName: 'Margaret', EmployeeID: 4 },
        { FirstName: 'Steven', EmployeeID: 5 },
        { FirstName: 'Laura', EmployeeID: 8 }
    ]
    var comboBoxObj;
    function create(args) {
        return ej.base.createElement('input');
    }
    function read(args) {
        var employeeData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.EmployeeDataSource));
        var value = new ej.data.DataManager(employeeData).executeLocal(new ej.data.Query().where('FirstName', 'equal', comboBoxObj.value));
        return value.length && value[0]['EmployeeID']; // to convert foreign key value to local value.
    }
    function destroy(){
        // to destroy the custom control.
        comboBoxObj.destroy();
    }
    function write(args) {
        comboBoxObj = new ej.dropdowns.ComboBox({
            dataSource: comboBoxData,
            fields: { value: args.column.foreignKeyValue },
            value: args.foreignKeyData[0][args.column.foreignKeyValue]
        });
        comboBoxObj.appendTo(args.element);
    }   
</script>
