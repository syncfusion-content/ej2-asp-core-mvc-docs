@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).Columns(col =>
    {
        col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
        col.Field("EmployeeID").HeaderText("Employee Name").ForeignKeyValue("FirstName").DataSource((IEnumerable<object>)ViewBag.EmployeeDataSource).Edit(new { create = "create", read = "read", destroy = "destroy", write = "write" }).Width("150").Add();
        col.Field("OrderDate").HeaderText("Order Date").Width("130").EditType("datepickeredit").Format("yMd").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
        col.Field("Freight").HeaderText("Freight").Width("120").EditType("numericedit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Format("C2").Add();
}).EditSettings(edit => edit.AllowEditing(true).AllowAdding(true).AllowDeleting(true)).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()
    
<script>
    var comboBoxData = [
        { FirstName: 'Nancy', EmployeeID: 1 },
        { FirstName: 'Andrew', EmployeeID: 6 },
        { FirstName: 'Janet', EmployeeID: 3 },
        { FirstName: 'Margaret', EmployeeID: 4 },
        { FirstName: 'Steven', EmployeeID: 5 },
        { FirstName: 'Laura', EmployeeID: 8 }
    ]
    var comboBoxObj;
    function create(args) {
        return ej.base.createElement('input');
    }
    function read(args) {
        var employeeData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.EmployeeDataSource));
        var value = new ej.data.DataManager(employeeData).executeLocal(new ej.data.Query().where('FirstName', 'equal', comboBoxObj.value));
        return value.length && value[0]['EmployeeID']; // to convert foreign key value to local value.
    }
    function destroy(){
        // to destroy the custom control.
        comboBoxObj.destroy();
    }
    function write(args) {
        comboBoxObj = new ej.dropdowns.ComboBox({
            dataSource: comboBoxData,
            fields: { value: args.column.foreignKeyValue },
            value: args.foreignKeyData[0][args.column.foreignKeyValue]
        });
        comboBoxObj.appendTo(args.element);
    }   
</script>