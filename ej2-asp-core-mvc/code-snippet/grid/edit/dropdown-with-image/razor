@using Newtonsoft.Json;

@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width(120).Add();
    col.Field("EmployeeID").HeaderText("Employee Name").ForeignKeyField("EmployeeID").ForeignKeyValue("FirstName").DataSource((IEnumerable<object>)ViewBag.EmployeeDataSource).Edit(new { create = "createEmployeeNameFn", read = "readEmployeeNameFn", destroy = "destroyEmployeeNameFn", write = "writeEmployeeNameFn" }).Width("220").Add();
    col.Field("Freight").HeaderText("Freight").EditType("numericedit").Format("C2").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Width("100").Add();
    col.Field("ShipName").HeaderText("Ship Name").Width("170").Add();
    col.Field("ShipCountry").HeaderText("Ship Country").EditType("dropdownedit").Width("150").Add();
}).EditSettings(edit => edit.AllowEditing(true).AllowAdding(true).AllowDeleting(true)).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()

<script>

var dropDownElement;
var dropDownListObj;
var dropDownDataSource = @Html.Raw(JsonConvert.SerializeObject(ViewBag.EmployeeDataSource));

function createEmployeeNameFn() {
    dropDownElement = document.createElement('input');
    return dropDownElement;
}
function destroyEmployeeNameFn() {
    dropDownListObj.destroy();
}
function readEmployeeNameFn() {
    return dropDownListObj.value;
}

function writeEmployeeNameFn(args) {
    var rowData = args.rowData;
    dropDownListObj = new ej.dropdowns.DropDownList({
        dataSource: dropDownDataSource,
        fields: { text: 'FirstName', value: 'EmployeeID' },
        value: rowData.EmployeeID,
        change: function (args) {
            // Update the EmployeeID value in the rowData object
            rowData.EmployeeID = args.value;
        },
        itemTemplate: function (props) {
            return '<div><img class="empImage" width="50px" src="https://ej2.syncfusion.com/demos/src/grid/images/' + props.EmployeeID + '.png" alt="employee"/><div class="ename">' + props.FirstName + '</div></div>';
        }
    });
    dropDownListObj.appendTo(dropDownElement);
}
</script>