@using Newtonsoft.Json;

<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
    <e-grid-editsettings allowEditing="true" allowAdding="true" allowDeleting="true"></e-grid-editsettings>
    <e-grid-columns>
    <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" validationRules="@(new { required=true, number=true})" textAlign="Right" width="120"></e-grid-column>
    <e-grid-column field="EmployeeID" headerText="Empolyee Name" foreignKeyField="EmployeeID" foreignKeyValue="FirstName" dataSource="ViewBag.EmployeeDataSource" edit="@(new {create = "createEmployeeNameHandler", read = "readEmployeeNameHandler", destroy = "destroyEmployeeNameHandler", write = "writeEmployeeNameHandler"})" width="220"></e-grid-column>
    <e-grid-column field="Freight" headerText="Freight" editType="numericedit" format="C2" textAlign="Right" width="100"></e-grid-column>
    <e-grid-column field="ShipName" headerText="Ship Name" width="170"></e-grid-column>  
    <e-grid-column field="ShipCountry" headerText="Ship Country" editType="dropdownedit" width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    var dropDownElement;
    var dropDownListObj;
    var dropDownDataSource = @Html.Raw(JsonConvert.SerializeObject(ViewBag.EmployeeDataSource));

    function createEmployeeNameHandler() {
        dropDownElement = document.createElement('input');
        return dropDownElement;
    }
    function destroyEmployeeNameHandler() {
        dropDownListObj.destroy();
    }
    function readEmployeeNameHandler() {
        return dropDownListObj.value;
    }
    function writeEmployeeNameHandler(args) {
        var rowData = args.rowData;
        dropDownListObj = new ej.dropdowns.DropDownList({
            dataSource: dropDownDataSource,
            fields: { text: 'FirstName', value: 'EmployeeID' },
            value: rowData.EmployeeID,
            change: function (args) {
                // Update the EmployeeID value in the rowData object
                rowData.EmployeeID = args.value;
            },
            itemTemplate: function (props) {
                return '<div><img class="employeeImage" width="50px" src="https://ej2.syncfusion.com/demos/src/grid/images/' + props.EmployeeID + '.png" alt="${EmployeeID}"/><div class="employeeName">' + props.FirstName + '</div></div>';
            }
        });
        dropDownListObj.appendTo(dropDownElement);
    }
</script>