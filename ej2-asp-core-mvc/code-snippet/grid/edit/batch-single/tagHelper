<ejs-grid id="grid" dataSource="ViewBag.DataSource" height="348px" allowPaging="true" enableHover="true" created="created" load="load" toolbar="@(new List<string>() {"Add", "Delete", "Update", "Cancel"})">
    <e-grid-editSettings allowAdding="true" allowEditing="true" allowDeleting="true" mode="Batch"></e-grid-editSettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" validationRules="@(new { required=true})" isPrimaryKey="true" textAlign="Right" width="100"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer Name" validationRules="@(new { required=true })" width="120"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" editType="numericedit" width="120" validationRules="@(new { required=true, min=3, max=1000})"></e-grid-column>
        <e-grid-column field="ShipName" headerText="Ship Name" width="150" validationRules="@(new { required=true})"></e-grid-column>
        <e-grid-column field="ShipCountry" headerText="Ship Country" editType="dropdownedit" width="150" validationRules="@(new { required=true})"></e-grid-column>
    </e-grid-columns>
</ejs-grid>
<script>
    function created() {
        var grid = document.getElementById('grid').ej2_instances[0];
        grid.getContentTable().addEventListener('click', function(args) {
        if (args.target.classList.contains('e-rowcell')) {
            grid.editModule.editCell(parseInt(args.target.getAttribute('index')),
                grid.getColumnByIndex(parseInt(args.target.getAttribute('data-colindex'))).field);
            }
        });
    }
    function load() {
        var grid = document.getElementById('grid').ej2_instances[0];
        grid.element.addEventListener('keydown', function(e) {
        var closesttd = e.target.closest('td');
        if (e.keyCode === 39 && !ej.base.isNullOrUndefined(closesttd.nextSibling)) {
            editACell(closesttd.nextSibling);
        }
        if (e.keyCode === 37 && !ej.base.isNullOrUndefined(closesttd.previousSibling) && !grid.getColumnByIndex(parseInt(closesttd.previousSibling.getAttribute('data-colindex'))).isPrimaryKey) {
            editACell(closesttd.previousSibling);
        }
        if (e.keyCode === 40 && !ej.base.isNullOrUndefined(closesttd.closest('tr').nextSibling)) {
            editACell(closesttd.closest('tr').nextSibling.querySelectorAll('td')[parseInt(closesttd.getAttribute('data-colindex'))]);
        }
        if (e.keyCode === 38 && !ej.base.isNullOrUndefined(closesttd.closest('tr').previousSibling)) {
            editACell(closesttd.closest('tr').previousSibling.querySelectorAll('td')[parseInt(closesttd.getAttribute('data-colindex'))]);}});
    }
    function editACell(args) {
        var grid = document.getElementById('grid').ej2_instances[0];
        grid.editModule.editCell(parseInt(args.getAttribute('index')),grid.getColumnByIndex(parseInt(args.getAttribute('data-colindex'))).field);
    }
</script>