@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
    col.Field("CustomerID").HeaderText("Customer ID").Width("120").Add();
    col.Field("ShipCountry").HeaderText("Ship Country").Edit(new { create = "createShipCountryHandler", read = "readShipCountryHandler", destroy = "destroyShipCountryHandler", write = "writeShipCountryHandler" }).Width("150").Add();
    col.Field("ShipState").HeaderText("Ship State").Edit(new { create = "createShipStateHandler", read = "readShipStateHandler", destroy = "destroyShipStateHandler", write = "writeShipStateHandler" }).Width("150").Add();
    col.Field("OrderDate").HeaderText("Order Date").Format("yMd").Width("150").EditType("datepickeredit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();

}).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()

<script>
    var country = [
        { countryName: 'United States', countryId: '1' },
        { countryName: 'Australia', countryId: '2' }
    ];
    var state = [
        { stateName: 'New York', countryId: '1', stateId: '101' },
        { stateName: 'Virginia ', countryId: '1', stateId: '102' },
        { stateName: 'Washington', countryId: '1', stateId: '103' },
        { stateName: 'Queensland', countryId: '2', stateId: '104' },
        { stateName: 'Tasmania ', countryId: '2', stateId: '105' },
        { stateName: 'Victoria', countryId: '2', stateId: '106' }
    ];
    var shipCountryObj;
    var shipCountryElement;
    var shipStateElement;
    var shipStateObj;

    function createShipCountryHandler() {
        shipCountryElement = document.createElement('input');
        return shipCountryElement;
    }
    function readShipCountryHandler() {
        return shipCountryObj.text;
    }
    function destroyShipCountryHandler() {
        shipCountryObj.destroy();
    }
    function writeShipCountryHandler() {
        shipCountryObj = new ej.dropdowns.DropDownList({
            dataSource: new ej.data.DataManager(country),
            fields: { value: 'countryId', text: 'countryName' },
            change: () => {
                shipStateObj.enabled = true;
                var filteredQuery = new ej.data.Query().where('countryId', 'equal', shipCountryObj.value);
                shipStateObj.query = filteredQuery;
                shipStateObj.text = '';
                shipStateObj.dataBind();
            },
            placeholder: 'Select a country',
            floatLabelType: 'Never'
        });
        shipCountryObj.appendTo(shipCountryElement);
    }

    function createShipStateHandler() {
        shipStateElement = document.createElement('input');
        return shipStateElement;
    }
    function readShipStateHandler() {
        return shipStateObj.text;
    }
    function destroyShipStateHandler() {
        shipStateObj.destroy();
    }
    function writeShipStateHandler() {
        shipStateObj = new ej.dropdowns.DropDownList({
            dataSource: new ej.data.DataManager(state),
            fields: { value: 'stateId', text: 'stateName' },
            enabled: false,
            placeholder: 'Select a state',
            floatLabelType: 'Never'
        });
        shipStateObj.appendTo(shipStateElement);
    }
</script>