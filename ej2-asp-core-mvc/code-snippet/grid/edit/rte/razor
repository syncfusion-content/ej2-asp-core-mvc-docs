@{
    var valueAccessor = "valueAccessorFn";
}

@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.datasource).AllowTextWrap(true).Created("created").Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width(30).Add();
    col.Field("Freight").HeaderText("Freight").Width(120).Add();
    col.Field("ShipCity").HeaderText("Ship City").Width(150).DisableHtmlEncode(false).ValueAccessor(valueAccessor).Edit(new { create = "create", read = "read", destroy = "destroy", write = "write" }).Add();

}).EditSettings(edit => edit.AllowEditing(true).AllowAdding(true).AllowDeleting(true)).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "Search" }).Render()


<script>
    var richTextEditor;
    var rteElement ;
    function create(args) {
        rteElement  = document.createElement('textarea');
        return rteElement ;
    }

    function write(args) {
        richTextEditor = new ej.richtexteditor.RichTextEditor({
            value: args.rowData[args.column.field],
        });
        richTextEditor.appendTo(rteElement );
    }

    function destroy() {
        richTextEditor.destroy();
    }

    function read(args) {
        return richTextEditor.value;
    }

    function created(args) {
        document.getElementById('Grid').ej2_instances[0].keyConfigs.enter = '';
    }
    
    function valueAccessorFn(field, data, column) {
        var value = data[field];
        if (value !== undefined) {
            return value.split("\n").join("<br>");
        } else {
            return "";
        }
    }
</script>