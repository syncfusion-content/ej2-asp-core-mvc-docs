@using Syncfusion.EJ2.DropDowns;

@{
    var jobRole = new DropDownList() { DataSource = ViewBag.roleData, Query = "new ej.data.Query()", Fields = new DropDownListFieldSettings() { Value = "role", Text = "role", Id = "role" }, AllowFiltering = true, Change = "ValChange" };
    var salaryDetails = new DropDownList() { DataSource = ViewBag.salaryData, Query = "new ej.data.Query()", Fields = new DropDownListFieldSettings() { Value = "salary", Text = "salary", Id = "salary" }, AllowFiltering = true, };
}

<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update" })" load="load">
    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editSettings>
    <e-grid-columns>
        <e-grid-column field="EmployeeID" headerText="Employee ID" isPrimaryKey="true" textAlign="Right" width="100" validationRules="@(new{ required = true })"></e-grid-column>
        <e-grid-column field="Role" headerText="Role" editType="dropdownedit" width="120" edit=jobRole></e-grid-column>
        <e-grid-column field="Salary" headerText="Salary" textAlign="Right" editType="dropdownedit" width="120" edit=salaryDetails></e-grid-column>
        <e-grid-column field="Address" headerText="Address" width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>    
    window.role = "";
    function load() {
        var column = this.getColumnByField("salary");
        column.validationRules = { required: [customFn, window["Please enter valid salary"]] };
    }

    function ValChange(args) {        
        window["role"] = args.value;
    }

    function customFn(args) {
        switch (window["role"]) {
            case "Engineer":
                if (args.value > 10000 && args.value < 15000) {
                    return true;
                } else {
                    this.rules["salary"]["required"][1] = "Please enter valid Engineer Salary";                    
                }
            break;

            case "TeamLead":
                if (args.value > 15000 && args.value < 20000) {
                    return true;
                } else {
                    this.rules["salary"]["required"][1] = "Please enter valid TeamLead Salary";                    
                }
            break;

            case "Manager":
                if (args.value > 20000 && args.value < 25000) {
                    return true;
                } else {
                    this.rules["salary"]["required"][1] = "Please enter valid Manager Salary";                                  
                }
            break;    
            case 'Sales':
                if (args.value > 5000 && args.value < 25000) {
                    return true;
                } else {
                    this.rules['Salary']['required'][1] = 'Please enter valid Manager Salary';
                }
            break;

            case 'Support':
                if (args.value > 10000 && args.value < 19000) {
                    return true;
                } else {
                     this.rules['Salary']['required'][1] = 'Please enter valid Manager Salary';
                }
            break;    
        }
        return false;
    }
</script>