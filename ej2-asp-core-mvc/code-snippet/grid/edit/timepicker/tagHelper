<ejs-grid id="Grid" dataSource="@ViewBag.DataSource" allowPaging="true" toolbar="@( new List<object>() {"Add","Edit","Delete","Update","Cancel"})">
    <e-grid-editsettings allowAdding="true" allowDeleting="true" allowEditing="true"></e-grid-editsettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" validationRules="@(new { required= true })" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer Name" width="150"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" editType="numericedit" textAlign="Right" format="C2" width="120"></e-grid-column>
        <e-grid-column field="ShipCountry" headerText="Ship Country"  width="150"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Date" editType="datepickeredit" format="yMd" textAlign="Right" width="140"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Time" edit="@(new {create = "createOrderDateFn", read = "readOrderDateFn", destroy = "destroyOrderDateFn", write = "writeOrderDateFn"})" format="hh :mm a" textAlign="Right" width="140"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    var timePickerObj;
    var timePickerElement

    function createOrderDateFn(args) {
        timePickerElement = document.createElement('input');
        return timePickerElement;
    }
    function readOrderDateFn() {
        return timePickerObj.value;
    }
    function destroyOrderDateFn() {
        timePickerObj.destroy();
    }
    function writeOrderDateFn(args) {
        var rowData = args.rowData;
        timePickerObj = new ej.calendars.TimePicker({
            value: rowData.OrderDate,
            change: function (e) {
                rowData.OrderDate = e.value;
            }
        });
        timePickerObj.appendTo(timePickerElement);
    }
</script>