@Html.EJS().Grid("Grid").DataSource((IEnumerable<object>)ViewBag.DataSource).Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).ValidationRules(new { required = "true" }).Add();
    col.Field("CustomerID").HeaderText("Customer ID").Width("120").Edit(new { create = "createCustomerIDHandler", read = "readCustomerIDHandler", destroy = "destroyCustomerIDHandler", write = "writeCustomerIDHandler" }).Add();
    col.Field("Freight").HeaderText("Freight").ValidationRules(new { required = true, min= 1, max= 1000 }).Width("120").Format("C2").EditType("numericedit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("OrderDate").HeaderText("Order Date").Format("yMd").Width("130").EditType("datepickeredit").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("ShipCountry").HeaderText("Ship Country").Width("150").Add();

}).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Normal); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render()

<script>
    var autoCompleteData = [
        { CustomerID: 'VINET', Id: '1' },
        { CustomerID: 'TOMSP', Id: '2' },
        { CustomerID: 'HANAR', Id: '3' },
        { CustomerID: 'VICTE', Id: '4' },
        { CustomerID: 'SUPRD', Id: '5' },
    ];
    var autoCompleteObj;
    var autoCompleteElement;

    function createCustomerIDHandler() {
        autoCompleteElement = document.createElement('input');
        return autoCompleteElement;
    }
    function readCustomerIDHandler() {
        return autoCompleteObj.value;
    }
    function destroyCustomerIDHandler() {
        autoCompleteObj.destroy();
    }
    function writeCustomerIDHandler(args) {
        var rowData = args.rowData;
        autoCompleteObj = new ej.dropdowns.AutoComplete({
            allowCustom: true,
            dataSource: autoCompleteData,
            fields: { value: "CustomerID", text: "CustomerID" },
            value: rowData.CustomerID,
        });
        autoCompleteObj.appendTo(autoCompleteElement);
    }
</script>