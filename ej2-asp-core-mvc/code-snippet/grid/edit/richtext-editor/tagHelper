
<ejs-grid id="Grid" dataSource="@ViewBag.DataSource"  allowTextWrap="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })" created="created">
    <e-grid-editsettings allowEditing="true" allowAdding="true" allowDeleting="true"></e-grid-editsettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" validationRules="@(new { required=true})" textAlign="Right" width="100"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer Name" validationRules="@(new { required=true})" width="100"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" editType="numericedit" validationRules="@(new { required= true })" format="C2" textAlign="Right" width="100"></e-grid-column>
        <e-grid-column field="OrderDate" headerText="Order Date" editType="datepickeredit" format="yMd" textAlign="Right" width="100"></e-grid-column>
        <e-grid-column field="ShipAddress" headerText="Ship Address" edit="@(new {create = "createShipAddressHandler", read = "readShipAddressHandler", destroy = "destroyShipAddressHandler", write = "writeShipAddressHandler"})" disableHtmlEncode=false editType="textarea" width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    function created() {
        this.keyConfigs.enter = '';
    }
    function onFocus(args) {
        ((args.event).target).addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.stopPropagation();
            }
        });
    }
</script>

<script>
    var richTextEditorElement;
    var richTextEditorObj;

    function createShipAddressHandler(args) {
        richTextEditorElement = document.createElement('textarea');
        return richTextEditorElement;
    }
    function readShipAddressHandler() {
        return richTextEditorObj.value;
    }
    function destroyShipAddressHandler() {
        richTextEditorObj.destroy();
    }
    function writeShipAddressHandler(args) {
        var rowData = args.rowData;
        richTextEditorObj = new ej.richtexteditor.RichTextEditor({
            value: rowData.ShipAddress,
            focus: onFocus,
            change: function (e) {
                rowData.ShipAddress = e.value;
            }
        });
        richTextEditorObj.appendTo(richTextEditorElement);
    }
</script>