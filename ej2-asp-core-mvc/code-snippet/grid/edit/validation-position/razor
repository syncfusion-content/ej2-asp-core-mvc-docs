@Html.EJS().Grid("grid").DataSource((IEnumerable<object>)ViewBag.DataSource).ActionComplete("onActionComplete").Height("348px").Columns(col =>
{
  col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").ValidationRules(new { required = true }).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
  col.Field("CustomerID").HeaderText("Customer Name").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();
  col.Field("Freight").HeaderText("Freight").Format("C2").EditType("numericedit").ValidationRules(new { required = true, min = 1, max=1000 }).Width("150").Add();
  col.Field("ShipCountry").HeaderText("Ship Country").EditType("dropdownedit").ValidationRules(new { required = true }).Width("150").Add();
}).AllowPaging().EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Dialog).Template("#dialogtemplate"); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" }).Render() 
<script>
  function onActionComplete(args) {
    if (args.requestType == "beginEdit" || args.requestType == "add") { 
      var grid = document.getElementById("grid").ej2_instances[0];
      var valueError = ej.grids.getObject('valErrorPlacement', grid.editModule).bind(grid.editModule);  
      grid.editModule.formObj.customPlacement = (input, error) => { 
        valueError(input, error);
        var element = document.getElementById(input.name + '_Error');
        var tooltipWidth = element.offsetWidth;
        var  inputElement = null;
        if (document.querySelector('#' + grid.element.id + input.name)) {
          inputElement = document.querySelector('#' +grid.element.id + input.name);
        } else if (document.querySelector('#' + input.name)) {
          inputElement = document.querySelector('#' + input.name);
        }
        var inputPosition =  inputElement.getBoundingClientRect();
        var leftPosition =  (inputPosition.left - tooltipWidth - 16).toString() + 'px'; //for right side
        var topPosition = inputPosition.top.toString() + 'px';
        element.style.left = leftPosition; 
        element.style.top =  topPosition;
        element.style.position = 'fixed';
      } 
    }
  }
</script>
<style>
    .e-gridform .e-arrow-tip.e-tip-top {
        transform: rotate(95deg);
        left: 121px;
        top: 13px;
    }
</style>
 