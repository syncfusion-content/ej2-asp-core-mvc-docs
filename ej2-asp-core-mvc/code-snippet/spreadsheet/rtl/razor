@Html.EJS().Spreadsheet("spreadsheet").Created("created").EnableRtl(true).Locale("ar-AE").Sheets((sheet) =>
{
    sheet.Ranges((rangeSetting) =>
    {
        rangeSetting.DataSource(@ViewBag.defaultData).Add();
    }).Columns(column =>
       {
           column.Width(180).Add();
           column.Width(130).Add();
           column.Width(130).Add();
           column.Width(180).Add();
           column.Width(130).Add();
           column.Width(120).Add();
       }).Add();
}).Render()


<script>
    var ajax = new ej.base.Ajax(location.origin + '/../Content/locale/locale-text.json', 'GET', false);   //load the de json culture file
    ajax.send().then((e) => {
        var loader = JSON.parse(e);
        ej.base.L10n.load(
            loader
        );
        ej.base.setCulture('ar-AE');
    });


    function created() {
        var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
        //Applies cell and number formatting to specified range of the active sheet
        spreadsheet.cellFormat(
            { fontWeight: 'bold', textAlign: 'center', verticalAlign: 'middle' },
            'A1:H1'
        );
        spreadsheet.numberFormat('$#,##0.00', 'F2:F11');
    }

</script>