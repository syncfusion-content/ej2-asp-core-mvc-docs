<div id="Openfromjson">
    <label id="Heading">Open From Json Options:</label> <br>
    <input type="checkbox" id="valueOnly" onchange="toggleCheckboxes()"><label for="valueOnly">Only Values</label>
    <input type="checkbox" id="style"><label for="style">Ignore Style</label>
    <input type="checkbox" id="formula"><label for="formula">Ignore Formula</label>
    <input type="checkbox" id="format"><label for="format">Ignore Format</label>
    <input type="checkbox" id="cf"><label for="cf">Ignore CF</label>
    <input type="checkbox" id="dv"><label for="dv">Ignore Validation</label>
    <input type="checkbox" id="freeze"><label for="freeze">Ignore Freezepane</label>
    <input type="checkbox" id="wrap"><label for="wrap">Ignore Wrap</label>
    <input type="checkbox" id="chart"><label for="chart">Ignore Chart</label>
    <input type="checkbox" id="image"><label for="image">Ignore Image</label>
    <input type="checkbox" id="note"><label for="note">Ignore Note</label>
</div>
@Html.EJS().Uploader("UploadFiles").Success("onSuccess").AllowedExtensions(".xls, .xlsx,
.csv").showFileList(false).AsyncSettings(new Syncfusion.EJ2.Inputs.UploaderAsyncSettings {
SaveUrl = "https://services.syncfusion.com/aspnet/production/api/FileUploader/Save",
RemoveUrl = "https://services.syncfusion.com/aspnet/production/api/FileUploader/Remove" }).Render()
@Html.EJS().Spreadsheet("spreadsheet").SaveUrl("Home/Save").AllowSave(true).beforeOpen("beforeOpen").Render()

<style>
    #Openfromjson {
        margin-top: 10px;
        margin-bottom: 20px;
    }

    #Openfromjson input[type="checkbox"] {
        margin: 7px;
    }

    #Openfromjson label {
        font-size: 14px;
    }

    #Heading {
        font-weight: bold;
    }
</style>

<script>

    window.onload = function (args) {
        var uploaderObj = document.getElementById("UploadFiles").ej2_instances[0];
        uploaderObj.setProperties({
            buttons: {
                browse: 'Choose file'
            }
        });
    }

    function beforeOpen(args) {
        args.cancel = true;
        var valueOnlyCheckbox = document.getElementById("valueOnly").checked;
        var options = valueOnlyCheckbox ? { onlyValues: true } : createOptions();
        fetch(
            'https://services.syncfusion.com/aspnet/production/api/spreadsheet/open',
            args.requestData
        ).then((response) => {
            response.json().then((data) => {
                var ssObj = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
                ssObj.openFromJson({ file: data }, options)
            });
        });
    }

    function onSuccess(args) {
        var ssObj = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
        if (args.operation === 'upload')
            ssObj.open({ file: args.file.rawFile });
    }

    function toggleCheckboxes() {
        var valueOnlyCheckbox = document.getElementById('valueOnly');
        var checkboxes = document.querySelectorAll('#Openfromjson input[type="checkbox"]:not(#valueOnly)');
        checkboxes.forEach(checkbox => {
            (checkbox).disabled = valueOnlyCheckbox.checked;
            if (valueOnlyCheckbox.checked) {
                (checkbox).checked = false;
            }
        });
    }

    function createOptions() {
        const options = {};
        options.ignoreStyle = document.getElementById('style').checked;
        options.ignoreFormula = document.getElementById('formula').checked;
        options.ignoreFormat = document.getElementById('format').checked;
        options.ignoreConditionalFormat = document.getElementById('cf').checked;
        options.ignoreValidation = document.getElementById('dv').checked;
        options.ignoreFreezePane = document.getElementById('freeze').checked;
        options.ignoreWrap = document.getElementById('wrap').checked;
        options.ignoreChart = document.getElementById('chart').checked;
        options.ignoreImage = document.getElementById('image').checked;
        options.ignoreNote = document.getElementById('note').checked;
        return options;
    }
</script>