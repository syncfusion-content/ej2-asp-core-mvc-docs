<ejs-spreadsheet id="spreadsheet" showRibbon="false" showFormulaBar="false" created="created">
    <e-spreadsheet-sheets>
        <e-spreadsheet-sheet name="Shipment Details">
            <e-spreadsheet-ranges>
                <e-spreadsheet-range dataSource="ViewBag.DefaultData"></e-spreadsheet-range>
            </e-spreadsheet-ranges>

            <e-spreadsheet-columns>
                <e-spreadsheet-column width="130"></e-spreadsheet-column>
                <e-spreadsheet-column width="220"></e-spreadsheet-column>
                <e-spreadsheet-column width="90"></e-spreadsheet-column>
                <e-spreadsheet-column width="140"></e-spreadsheet-column>
                <e-spreadsheet-column width="90"></e-spreadsheet-column>
                <e-spreadsheet-column width="100"></e-spreadsheet-column>
                <e-spreadsheet-column width="100"></e-spreadsheet-column>
            </e-spreadsheet-columns>
        </e-spreadsheet-sheet>
    </e-spreadsheet-sheets>
</ejs-spreadsheet>

<script>

    function created() {
      // Applies style formatting to the active sheet before inserting a new sheet
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'A1:H1');
        this.cellFormat({ textAlign: 'center' }, 'D2:H15');
        // inserting a new sheet with data at 1st index
        // You can also insert empty sheets by specifying the start and end sheet index instead of sheet model
        this.insertSheet([{
            index: 1,
            name: 'Inserted Sheet',
            ranges: [{ dataSource: @Html.Raw(JsonConvert.SerializeObject(@ViewBag.DefaultData)) }],
            columns: [{ width: 150 }, { width: 110 }, { width: 110 }, { width: 85 }, { width: 85 }, { width: 85 }, { width: 85 },
                { width: 85 }]
        }]);
        // Applies style formatting for the inserted sheet
        this.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'Inserted Sheet!A1:H1');
        this.cellFormat({ textAlign: 'center' }, 'Inserted Sheet!D2:H15');
    }

</script>