@using Syncfusion.EJ2
@{
    var localeFormats = ViewBag.LocaleFormats as Dictionary<string, List<object>>;
}

@Html.EJS().DropDownList("locales").Placeholder("Select a Locale").Width("200px").PopupHeight("200px").DataSource((IEnumerable<object>)@ViewBag.CultureList).Fields(new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings { Text="Culture", Value = "Locale" }).Change("change").Render()

@Html.EJS().Spreadsheet("spreadsheet").Locale("de").ListSeparator(";").Created("created").Sheets((sheet) =>
{
    sheet.Ranges((ranges) =>
    {
        ranges.DataSource(@ViewBag.DefaultData).Add();
    }).Columns(column =>
    {
        column.Width(120).Add();
        column.Width(180).Add();
        column.Width(100).Add();
        column.Width(120).Add();
        column.Width(120).Add();
    }).Add();
}).Render()

<script>

    var localeFormats = @Html.Raw(Json.Encode(localeFormats));
    function loadCultureFiles(localeOptions) {
        for (var locale = 0; locale < localeOptions.length; locale++) {
            var files = ['ca-gregorian', 'currencies', 'numbers', 'timeZoneNames', 'numberingSystems'];
            var loadCulture = function (fileName) {
                var url = '/Content/cldr-data/' + (fileName === 'numberingSystems' ? '' : (localeOptions[locale] + '/')) + fileName + '.json';
                var ajax = new ej.base.Ajax(url, 'GET', false);
                ajax.onSuccess = (value) => ej.base.loadCldr(JSON.parse(value));
                ajax.send();
            };
            for (var prop = 0; prop < files.length; prop++) {
                loadCulture(files[prop]);
            }
        }
    }
    loadCultureFiles(['de', 'fr-CH', 'zh']);

    // Setting German culture.
    ej.base.setCulture('de');
    // Setting currency code for the German culture.
    ej.base.setCurrencyCode('EUR');

    // Mapping default number formats for the 'de' locale before the spreadsheet is created.
    ej.spreadsheet.configureLocalizedFormat(null, localeFormats['de']);

    function created() {
        var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
        spreadsheet.cellFormat({ fontWeight: 'bold', textAlign: 'center' }, 'A1:H1');
        applyFormats();
    }

    function change(args) {
        var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
        var localeOption = args.value.split(' ');
        // Setting the culture name like 'de', 'fr-CH', 'zh', and 'en-US'.
        var cultureName = localeOption[0];
        ej.base.setCulture(cultureName);
        // Setting the currency code for the selected locale like 'EUR', 'CNY', 'CHF', and 'USD'.
        ej.base.setCurrencyCode(localeOption[1]);
        // Mapping the default number format codes for the selected locale.
        ej.spreadsheet.configureLocalizedFormat(spreadsheet, localeFormats[cultureName]);
        // Setting the culture for the spreadsheet.
        spreadsheet.locale = cultureName;
        // Setting the list separator for the selected locale.
        spreadsheet.listSeparator = localeOption[2];
        // Refreshing the changes immediately in the spreadsheet.
        spreadsheet.dataBind();
        applyFormats();
    }

    function applyFormats() {
        var spreadsheet = ej.base.getComponent(document.getElementById('spreadsheet'), 'spreadsheet');
        // Apply format to the specified range in the active sheet.
        // The getFormatFromType method returns the culture-based format code based on the mapped formats.
        // If a format ID is not mapped or is not applicable, it will return the format code based on the loaded culture.
        // For 'en-US' (English) culture, the format code will be 'm/d/yyyy'.
        // For 'de' (German) culture, the format code will be 'dd.MM.yyyy'.
        // For 'fr-CH' (French-Switzerland) culture, the format code will be 'dd.MM.yyyy'.
        // For 'zh' (Chinese) culture, the format code will be 'yyyy/m/d'.
        spreadsheet.numberFormat(ej.spreadsheet.getFormatFromType('ShortDate'), 'B2:B11');
        // For 'en-US' (English) culture, the format code will be 'h:mm:ss AM/PM'.
        // For 'de' (German) culture, the format code will be 'HH:mm:ss'.
        // For 'fr-CH' (French-Switzerland) culture, the format code will be 'HH:mm:ss'.
        // For 'zh' (Chinese) culture, the format code will be 'h:mm:ss AM/PM'.
        spreadsheet.numberFormat(ej.spreadsheet.getFormatFromType('Time'), 'C2:C11');
        // For 'en-US' (English) culture, the format code will be '$#,##0.00'.
        // For 'de' (German) culture, the format code will be '#,##0.00 "€"'.
        // For 'fr-CH' (French-Switzerland) culture, the format code will be '#,##0.00 "CHF"'.
        // For 'zh' (Chinese) culture, the format code will be '"¥"#,##0.00'.
        spreadsheet.numberFormat(ej.spreadsheet.getFormatFromType('Currency'), 'E2:F11');
        // For 'en-US' (English) culture, the format code will be '_($* #,##0.00_);_($* (#,##0.00);_($* "-"??_);_(@_)'.
        // For 'de' (German) culture, the format code will be '_-* #,##0.00 "€"_-;-* #,##0.00 "€"_-;_-* "-"?? "€"_-;_-@_-'.
        // For 'fr-CH' (French-Switzerland) culture, the format code will be '_-* #,##0.00 "CHF"_-;-* #,##0.00 "CHF"_-;_-* "-"?? "CHF"_-;_-@_-'
        // For 'zh' (Chinese) culture, the format code will be '_ "¥"* #,##0.00_ ;_ "¥"* -#,##0.00_ ;_ "¥"* "-"??_ ;_ @_'
        spreadsheet.numberFormat(ej.spreadsheet.getFormatFromType('Accounting'), 'H2:H11');
        // The percentage format code will be '0.00%' for all the cultures.
        spreadsheet.numberFormat('0.00%', 'G2:G11');
    }
</script>
