<div class="control-section">
    <div id="signature-toolbar-control">
        @(Html.EJS().Toolbar("toolbar").Width("100%").Items(new List<Syncfusion.EJ2.Navigations.ToolbarItem> {
                new Syncfusion.EJ2.Navigations.ToolbarItem { Text = "Undo", PrefixIcon = "e-icons e-undo", TooltipText = "Undo (Ctrl + Z)" },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Text = "Redo", PrefixIcon = "e-icons e-redo", TooltipText = "Redo (Ctrl + Y)"},
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Separator },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Button, Template = "<button id='save-option'></button>", TooltipText = "Save (Ctrl + S)"},
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Separator },
                new Syncfusion.EJ2.Navigations.ToolbarItem { TooltipText = "Stroke Color", Type = Syncfusion.EJ2.Navigations.ItemType.Input, Template = "<input id='stroke-color' type='color'/>" },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Separator },
                new Syncfusion.EJ2.Navigations.ToolbarItem { TooltipText = "Background Color", Type = Syncfusion.EJ2.Navigations.ItemType.Input, Template = "<input id='bg-color' type='color'/>" },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Separator },
                new Syncfusion.EJ2.Navigations.ToolbarItem { TooltipText = "Stroke Width", Type = Syncfusion.EJ2.Navigations.ItemType.Input, Template = "<input id='stroke-width' type='text'/>" },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Type = Syncfusion.EJ2.Navigations.ItemType.Separator },
                new Syncfusion.EJ2.Navigations.ToolbarItem { Text = "Clear", PrefixIcon = "e-sign-icons e-clear", TooltipText = "Clear" },
                new Syncfusion.EJ2.Navigations.ToolbarItem { TooltipText = "Disabled", Align = Syncfusion.EJ2.Navigations.ItemAlign.Right, Type = Syncfusion.EJ2.Navigations.ItemType.Input, Template = "<input id='disabled' type='checkbox'/>"}
                })
                .Created("Created")
                .Clicked("Clicked")
                .Render()
                )
        <div id="signature-control">
            @Html.EJS().Signature("signature").MaxStrokeWidth(2).Change("signChange").Render();
        </div>
    </div>
</div>
}
<script>
    function signChange(args) {
        if (!signature.isEmpty()) {
            var saveBtn = ej.base.getComponent(document.getElementById("save-option"), 'split-btn');
            clearButton();
            saveBtn.disabled = false;
        }
        updateUndoRedo();
    }

    function Created(args) {
        new ej.buttons.CheckBox({
            checked: false,
            label: "Disabled",
            change: (args) => {
                signature.disabled = args.checked;
            }
        }, "#disabled");
        var items = [{ text: 'Png' }, { text: 'Jpeg' }, { text: 'Svg' }];
        new ej.splitbuttons.SplitButton({ content: 'Save', iconCss: 'e-sign-icons e-save', items: items, select: onSelect, disabled: true }, '#save-option');
        var strokeColor = new ej.inputs.ColorPicker({
            modeSwitcher: false,
            columns: 4,
            presetColors: {
                'custom': ['#000000', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',
                    '#009688', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107']
            },
            beforeTileRender: (args) => {
                args.element.classList.add('e-circle-palette');
                args.element.appendChild(ej.base.createElement('span', { className: 'e-circle-selection' }));
            },
            showButtons: false, mode: 'Palette', cssClass: 'e-stroke-color', change: strokeColorChanged
        });
        strokeColor.appendTo('#stroke-color');
        var bgColor = new ej.inputs.ColorPicker({
            noColor: true,
            modeSwitcher: false,
            columns: 4,
            presetColors: {
                'custom': ['#ffffff', '#f44336', '#e91e63', '#9c27b0', '#673ab7', '#2196f3', '#03a9f4', '#00bcd4',
                    '#009688', '#8bc34a', '#cddc39', '#ffeb3b']
            },
            beforeTileRender: (args) => {
                args.element.classList.add('e-circle-palette');
                args.element.appendChild(ej.base.createElement('span', { className: 'e-circle-selection' }));
            },
            showButtons: false, mode: 'Palette', cssClass: 'e-bg-color', change: bgColorChanged
        });
        bgColor.appendTo('#bg-color');
        var ddl = new ej.dropdowns.DropDownList({
            dataSource: [1, 2, 3, 4, 5],
            width: '60',
            value: 2,
            change: function (args) {
                signature.maxStrokeWidth = args.value;
            }
        });
        ddl.appendTo('#stroke-width');
        ej.base.addClass([strokeColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');
        ej.base.addClass([bgColor.element.nextElementSibling.querySelector('.e-selected-color')], 'e-sign-icons');
        clearButton(true);
        var toolbarItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');
        for (var i = 0; i < toolbarItems.length; i++) {
            if (toolbarItems[i].children[0].classList.contains('e-undo')) {
                var undoButton = ej.base.getComponent(toolbarItems[i], 'btn');
                undoButton.disabled = true;
            }
            if (toolbarItems[i].children[0].classList.contains('e-redo')) {
                var redoButton = ej.base.getComponent(toolbarItems[i], 'btn');
                redoButton.disabled = true;
            }
        }
    }

    function Clicked(args) {
        var saveBtn = ej.base.getComponent(document.getElementById("save-option"), 'split-btn');
        if (signature.disabled && args.item.tooltipText != 'Disabled') {
            return;
        }
        switch (args.item.tooltipText) {
            case 'Undo (Ctrl + Z)':
                if (signature.canUndo()) {
                    signature.undo();
                    updateUndoRedo();
                    updateSaveBtn();
                }
                break;
            case 'Redo (Ctrl + Y)':
                if (signature.canRedo()) {
                    signature.redo();
                    updateUndoRedo();
                    updateSaveBtn();
                }
                break;
            case 'Clear':
                signature.clear();
                if (signature.isEmpty()) {
                    clearButton();
                    saveBtn.disabled = true;
                }
                break;
        }
    }

    function updateSaveBtn() {
        var saveBtn = ej.base.getComponent(document.getElementById("save-option"), 'split-btn');
        if (signature.isEmpty()) {
            saveBtn.disabled = true;
        }
    }

    function updateUndoRedo() {
        var undoButton; var redoButton;
        var tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');
        for (var i = 0; i < tlItems.length; i++) {
            if (tlItems[i].children[0].classList.contains('e-undo')) {
                undoButton = ej.base.getComponent(tlItems[i], 'btn');
            }
            if (tlItems[i].children[0].classList.contains('e-redo')) {
                redoButton = ej.base.getComponent(tlItems[i], 'btn');
            }
        }
        if (signature.canUndo()) {
            undoButton.disabled = false;
        } else {
            undoButton.disabled = true;
        }
        if (signature.canRedo()) {
            redoButton.disabled = false;
        } else {
            redoButton.disabled = true;
        }
    }

    function onSelect(args) {
        signature.save(args.item.text, 'Signature');
    }

    function strokeColorChanged(args) {
        if (signature.disabled) {
            return;
        }
        var selElem = this.element.nextElementSibling.querySelector('.e-selected-color');
        selElem.style.borderBottomColor = args.currentValue.rgba;
        signature.strokeColor = args.currentValue.rgba;
    }

    function bgColorChanged(args) {
        if (signature.disabled) {
            return;
        }
        var selElem = this.element.nextElementSibling.querySelector('.e-selected-color');
        signature.backgroundColor = args.currentValue.rgba;
        selElem.style.borderBottomColor = args.currentValue.rgba;
    }

    function clearButton(isCreated) {
        var tlItems = document.querySelectorAll('.e-toolbar .e-toolbar-items .e-toolbar-item .e-tbar-btn.e-tbtn-txt');
        for (var i = 0; i < tlItems.length; i++) {
            if (tlItems[i].children[0].classList.contains('e-clear')) {
                var clrBtn = ej.base.getComponent(tlItems[i], 'btn');
                if (isCreated || signature.isEmpty()) {
                    clrBtn.disabled = true;
                } else {
                    clrBtn.disabled = false;
                }
            }
        }
    }

</script>

@section Scripts {
    <script>
        var signature = ej.base.getComponent(document.getElementById('signature'), 'signature');
        document.getElementById('save-option').addEventListener('click', function () {
            signature.save();
        });

        var items = [
            {
                text: 'Png'
            },
            {
                text: 'Jpeg'
            },
            {
                text: 'Svg'
            }
        ];
    </script>
}

<style>
    @font-face {
        font-family: 'font-icons';
        src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
        font-weight: normal;
        font-style: normal;
    }

    .e-sign-icons {
        font-family: 'font-icons' !important;
        font-size: 55px;
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        line-height: 1;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    #signature-toolbar-control {
        border: 1px solid lightgray;
    }

    #signature-toolbar-control #toolbar {
        border: none;
        border-bottom: 1px solid lightgray;
        box-sizing: border-box;
    }

    #signature-toolbar-control #toolbar {
        height: 44px !important;
    }

    #signature-toolbar-control .e-btn:disabled {
        opacity: 0.5 !important;
        pointer-events: none;
    }

    #signature-toolbar-control #signature-control {
        height: 300px;
        width: 100%;
        margin: 0;
    }

    #signature-toolbar-control #signature {
        border: none !important;
        height: 90%;
        width: 100%;
    }

    .e-colorpicker-wrapper.e-bg-color #bg-color + .e-split-btn-wrapper .e-split-btn .e-selected-color {
        background: none;
        border-bottom-style: solid;
        border-bottom-width: 3px;
        width: 14px;
        margin: 0px 2px;
        border-bottom-color: #ffffff;
    }

    .e-colorpicker-wrapper.e-stroke-color #stroke-color + .e-split-btn-wrapper .e-split-btn .e-selected-color {
        background: none;
        border-bottom-style: solid;
        border-bottom-width: 3px;
        width: 14px;
        margin: 0px 2px;
        border-bottom-color: #000000;
    }

        .e-colorpicker-wrapper.e-bg-color #bg-color + .e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview,
        .e-colorpicker-wrapper.e-stroke-color #stroke-color + .e-split-btn-wrapper .e-split-btn .e-selected-color .e-split-preview {
            display: none;
        }

    .e-colorpicker-wrapper.e-bg-color #bg-color + .e-split-btn-wrapper .e-split-btn .e-selected-color::before {
        content: '\e707';
    }

    .e-colorpicker-wrapper.e-stroke-color #stroke-color + .e-split-btn-wrapper .e-split-btn .e-selected-color::before {
        content: '\e704';
    }

    #signature-toolbar-control .e-clear::before {
        content: '\e706';
    }

    #signature-toolbar-control .e-save::before {
        content: '\e701';
    }

    /* Circle palette customization */
    .e-container .e-palette .e-circle-palette {
        border: 0;
        height: 32px;
        width: 32px;
        border-radius: 20px;
        margin: 4px;
    }

    .e-container .e-palette .e-circle-palette:hover {
        box-shadow: none;
        transform: scale(1.2);
        transition: transform .2s ease-out;
    }

    .e-circle-palette .e-circle-selection {
        height: 32px;
        width: 32px;
        border-radius: 20px;
        display: inline-block;
        transform: scale(0);
        transition: transform 1.2s ease-in;
    }

    .e-circle-palette.e-selected .e-circle-selection {
        transform: scale(0.8);
        background-color: #fff;
        transition: transform .2s ease-out;
    }

    #circle-palette + .e-container,
    #scroll-palette + .e-container {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
    }

    .e-container .e-palette .e-circle-palette.e-selected {
        outline: none;
    }

    .e-bg-color .e-circle-palette.e-nocolor-item.e-selected .e-circle-selection {
        background: transparent;
    }

    .e-bg-color .e-circle-palette.e-nocolor-item.e-selected {
        border: 3px solid lightgray;
    }
</style>